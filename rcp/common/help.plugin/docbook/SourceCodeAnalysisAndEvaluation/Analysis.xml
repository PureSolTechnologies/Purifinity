<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V5.0//EN" "docbook.dtd">
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0">
	<title xml:id="Analysis">Analysis</title>
	<para>
		The Analysis stage is responsible to read the source from the
		repository and to store it away in Purifinity's internal data store
		for later use. Afterwards, the sources are read and converted into
		syntax trees for later usage by the
		<link linkend="Evaluation">evaluators</link>
		.
		The languages which are available are dependent on the
		<link linkend="WvailableLanguages.html">installed plug-ins</link>
		. The trees are also stored in the data store.
	</para>
	<section>
		<title xml:id="UniversalSyntaxTree">Universal Syntax Tree</title>
		<para>The syntax trees used in Purifinity are kind of special syntax
			trees. Since Purifinity is optimized for source code analysis and
			evaluation, the standard syntax trees used by compilers are not
			sufficient. Compilers do not need to deal with comments and white
			spaces in most languages, that is why during the lexical scan these
			kind of source code parts are removed and not handed over to the
			actual parser.
		</para>
		<para>
			The Universal Syntax Trees used by Purifinity contain
			<emphasis>all</emphasis>
			information from the source file, so it could be reproduced byte by
			byte and also contains additional information which is languages
			independent to support languages independent evaluators. Evaluators
			can be very powerful that way, because all information is available
			and an evaluator may handle different source from different
			languages,
			because some concepts and bugs are languages independent
			like
			uninitialized variables, empty catch blocks and so forth.
		</para>
	</section>
</chapter>