level-4-expr	{ }
iomsg-variable	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
NAME_LITERAL15_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
nonblock-do-construct	{ NAME_LITERAL }
function-subprogram	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
104_group_autogen	{ '(' }
dummy-arg	{ NAME_LITERAL '*' }
proc-language-binding-spec	{ BIND }
sync-stat	{ STAT ERRMSG }
NAME_LITERAL8_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
63_group_autogen	{ ':' }
type-param-attr-spec	{ KIND LEN }
substring	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
proc-target	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
io-implied-do-object	{ NAME_LITERAL '(' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
binding-private-stmt	{ PRIVATE }
v-list	{ '+' '-' }
127_opt_autogen	{ MODULE _EMTPTY_ }
207_group_autogen	{ ',' }
type-param-def-stmt	{ INTEGER }
flush-spec	{ UNIT IOSTAT IOMSG ERR }
MODULE1_opt_autogen	{ MODULE _EMTPTY_ }
data-stmt-repeat	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
bind-entity	{ NAME_LITERAL '/' }
data-stmt-constant	{ NAME_LITERAL '+' '-' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
31_optlist_autogen	{ _EMTPTY_ }
122_opt_autogen	{ 'E' _EMTPTY_ }
113_group_autogen	{ ',' }
logical-literal-constant	{ LOGICAL_LITERAL_CONSTANT }
82_group_autogen	{ ',' }
association-list	{ NAME_LITERAL }
selector	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
data-implied-do	{ '(' }
12_optlist_autogen	{ _EMTPTY_ }
r	{ INT_LITERAL_CONSTANT }
64_optlist_autogen	{ _EMTPTY_ }
if-then-stmt	{ NAME_LITERAL }
152_group_autogen	{ ELSE }
27_group_autogen	{ '(' }
actual-arg-spec	{ NAME_LITERAL }
22_opt_autogen	{ '=' _EMTPTY_ }
r2_opt_autogen	{ INT_LITERAL_CONSTANT _EMTPTY_ }
NAME_LITERAL9_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
parameter-stmt	{ PARAMETER }
array-section	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
type-declaration-stmt	{ 'TYPE' 'CLASS' INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
96_group_autogen	{ ',' }
213_group_autogen	{ ':' }
85_opt_autogen	{ INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL NAME_LITERAL _EMTPTY_ }
205_group_autogen	{ ',' }
','3_opt_autogen	{ ',' _EMTPTY_ }
r1_opt_autogen	{ INT_LITERAL_CONSTANT _EMTPTY_ }
9_opt_autogen	{ '(' _EMTPTY_ }
bounds-spec	{ }
','1_opt_autogen	{ ',' _EMTPTY_ }
error-stop-stmt	{ ERROR_STOP }
25_optlist_autogen	{ _EMTPTY_ }
intrinsic-stmt	{ INTRINSIC }
specification-part3_opt_autogen	{ _EMTPTY_ }
control-edit-desc	{ INT_LITERAL_CONSTANT ':' 'T' 'TL' 'TR' 'SS' 'SP' 'S' 'BN' 'BZ' 'RU' 'RD' 'RZ' 'RN' 'RC' 'RP' 'DC' 'DP' '+' '-' }
variable	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
52_group_autogen	{ }
common-block-object	{ NAME_LITERAL }
equiv-op	{ EQV NEQV }
do-stmt	{ NAME_LITERAL }
68_group_autogen	{ ':' }
NAME_LITERAL27_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
derived-type-def	{ 'TYPE' }
16_opt_autogen	{ '(' _EMTPTY_ }
lower-bound1_opt_autogen	{ _EMTPTY_ }
entity-decl	{ NAME_LITERAL }
155_group_autogen	{ NAME_LITERAL }
bounds-spec-list	{ }
134_opt_autogen	{ ':' _EMTPTY_ }
forall-construct	{ NAME_LITERAL }
expr3_opt_autogen	{ _EMTPTY_ }
type-param-spec-list	{ NAME_LITERAL }
154_group_autogen	{ CASE }
135_group_autogen	{ ',' }
input-item-list1_opt_autogen	{ NAME_LITERAL '(' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT _EMTPTY_ }
named-constant-def-list	{ NAME_LITERAL }
upper-bound	{ }
NAME_LITERAL13_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
n	{ INT_LITERAL_CONSTANT }
195_group_autogen	{ 'E' }
ac-value	{ '(' }
kind-selector1_opt_autogen	{ '(' _EMTPTY_ }
61_optlist_autogen	{ _EMTPTY_ }
2_group_autogen	{ KIND }
132_group_autogen	{ }
NAME_LITERAL19_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
95_group_autogen	{ ',' }
block-data-stmt	{ BLOCK_DATA }
158_group_autogen	{ NAME_LITERAL }
where-construct	{ NAME_LITERAL }
close-spec	{ UNIT IOSTAT IOMSG ERR STATUS }
volatile-stmt	{ VOLATILE }
coarray-spec	{ ':' }
86_group_autogen	{ ':' }
219_group_autogen	{ '(' }
if-stmt	{ IF }
submodule	{ SUBMODULE }
rewind-stmt	{ REWIND }
dummy-arg-list1_opt_autogen	{ NAME_LITERAL '*' _EMTPTY_ }
case-value	{ }
105_opt_autogen	{ UNIT _EMTPTY_ }
forall-step	{ }
action-term-do-construct	{ NAME_LITERAL }
derived-type-spec	{ NAME_LITERAL }
110_group_autogen	{ ',' }
codimension-stmt	{ CODIMENSION }
wait-stmt	{ WAIT }
component-array-spec	{ ':' }
141_group_autogen	{ ',' }
internal-subprogram	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
char-length	{ '(' INT_LITERAL_CONSTANT }
29_opt_autogen	{ ',' _EMTPTY_ }
102_opt_autogen	{ ',' _EMTPTY_ }
102_group_autogen	{ '%' }
6_optlist_autogen	{ _EMTPTY_ }
specification-part8_opt_autogen	{ _EMTPTY_ }
specification-part6_opt_autogen	{ _EMTPTY_ }
position-spec-list	{ UNIT IOMSG IOSTAT ERR }
128_group_autogen	{ }
exit-stmt	{ EXIT }
module-subprogram-part	{ CONTAINS }
','5_opt_autogen	{ ',' _EMTPTY_ }
37_opt_autogen	{ '(' _EMTPTY_ }
case-value-range	{ ':' }
bind-stmt	{ BIND }
198_group_autogen	{ 'E' '.' }
defined-io-generic-spec	{ READ WRITE }
connect-spec-list	{ UNIT ACCESS ACTION ASYNCHRONOUS BLANK DECIMAL DELIM ENCODING ERR FILE FORM IOMSG IOSTAT NEWUNIT PAD POSITION RECL ROUND SIGN STATUS }
data-pointer-object	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
generic-spec2_opt_autogen	{ NAME_LITERAL OPERATOR ASSIGNMENT READ WRITE _EMTPTY_ }
designator	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
io-implied-do-control	{ NAME_LITERAL }
private-or-sequence1_optlist_autogen	{ _EMTPTY_ }
NAME_LITERAL29_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
data-i-do-object-list	{ '(' NAME_LITERAL }
77_opt_autogen	{ _EMTPTY_ }
177_group_autogen	{ ',' }
92_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
140_group_autogen	{ INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL NAME_LITERAL }
19_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
function-stmt	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
level-5-expr	{ }
54_opt_autogen	{ ':' _EMTPTY_ }
116_opt_autogen	{ INT_LITERAL_CONSTANT ':' CHAR_LITERAL_CONSTANT 'T' 'TL' 'TR' 'SS' 'SP' 'S' 'BN' 'BZ' 'RU' 'RD' 'RZ' 'RN' 'RC' 'RP' 'DC' 'DP' '+' '-' _EMTPTY_ }
157_group_autogen	{ TYPE_IS CLASS_IS CLASS_DEFAULT }
bounds-remapping-list	{ }
critical-construct	{ NAME_LITERAL }
67_group_autogen	{ ',' }
allocate-coarray-spec	{ }
lower-cobound	{ }
138_opt_autogen	{ ':' _EMTPTY_ }
91_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
position-spec	{ UNIT IOMSG IOSTAT ERR }
79_group_autogen	{ ',' }
dummy-arg-list2_opt_autogen	{ NAME_LITERAL '*' _EMTPTY_ }
7_group_autogen	{ '(' }
cosubscript-list	{ }
dtv-type-spec	{ TYPE CLASS }
108_opt_autogen	{ UNIT _EMTPTY_ }
10_group_autogen	{ '=' }
32_group_autogen	{ ':' }
type-bound-procedure-part1_opt_autogen	{ CONTAINS _EMTPTY_ }
60_group_autogen	{ '(' }
arithmetic-if-stmt	{ IF }
access-id	{ NAME_LITERAL OPERATOR ASSIGNMENT READ WRITE }
proc-pointer-init	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
39_opt_autogen	{ ':' _EMTPTY_ }
11_group_autogen	{ ',' }
118_opt_autogen	{ '.' _EMTPTY_ }
internal-subprogram-part4_opt_autogen	{ CONTAINS _EMTPTY_ }
type-param-decl	{ NAME_LITERAL }
225_group_autogen	{ ',' }
equivalence-set-list	{ '(' }
associate-stmt	{ NAME_LITERAL }
r3_opt_autogen	{ INT_LITERAL_CONSTANT _EMTPTY_ }
rel-op	{ EQ NE LT LE GT GE '=' '/' '<' '>' }
46_optlist_autogen	{ _EMTPTY_ }
144_group_autogen	{ NAME_LITERAL }
61_opt_autogen	{ '(' _EMTPTY_ }
NAME_LITERAL1_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
98_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
41_optlist_autogen	{ _EMTPTY_ }
specification-part9_opt_autogen	{ _EMTPTY_ }
44_opt_autogen	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT _EMTPTY_ }
component-initialization1_opt_autogen	{ '=' _EMTPTY_ }
82_opt_autogen	{ ELSEWHERE _EMTPTY_ }
allocate-stmt	{ ALLOCATE }
51_opt_autogen	{ ':' _EMTPTY_ }
close-spec-list	{ UNIT IOSTAT IOMSG ERR STATUS }
8_opt_autogen	{ ',' _EMTPTY_ }
declaration-construct1_optlist_autogen	{ _EMTPTY_ }
83_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
parent-identifier	{ NAME_LITERAL }
176_group_autogen	{ ',' }
165_group_autogen	{ ',' }
component-initialization	{ '=' }
66_group_autogen	{ ':' }
NAME_LITERAL3_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
position-edit-desc	{ 'T' 'TL' 'TR' INT_LITERAL_CONSTANT }
associate-construct	{ NAME_LITERAL }
62_opt_autogen	{ ':' _EMTPTY_ }
97_group_autogen	{ ',' }
read-stmt	{ READ }
56_opt_autogen	{ '-' _EMTPTY_ }
71_optlist_autogen	{ _EMTPTY_ }
49_optlist_autogen	{ _EMTPTY_ }
kind-selector	{ '(' }
29_group_autogen	{ ',' }
internal-subprogram-part1_opt_autogen	{ CONTAINS _EMTPTY_ }
73_opt_autogen	{ _EMTPTY_ }
NAME_LITERAL26_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
attr-spec	{ ALLOCATABLE ASYNCHRONOUS CODIMENSION CONTIGUOUS DIMENSION EXTERNAL INTENT INTRINSIC OPTIONAL PARAMETER POINTER PROTECTED SAVE TARGET VALUE VOLATILE PUBLIC PRIVATE BIND }
ac-value-list	{ '(' }
forall-assignment-stmt	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
30_group_autogen	{ NAME_LITERAL }
component-attr-spec	{ ALLOCATABLE CODIMENSION CONTIGUOUS DIMENSION POINTER PUBLIC PRIVATE }
27_optlist_autogen	{ _EMTPTY_ }
proc-decl	{ NAME_LITERAL }
enumerator	{ NAME_LITERAL }
internal-subprogram1_optlist_autogen	{ _EMTPTY_ }
other-specification-stmt	{ PUBLIC PRIVATE ALLOCATABLE ASYNCHRONOUS BIND CODIMENSION COMMON DATA DIMENSION EQUIVALENCE EXTERNAL INTENT INTRINSIC NAMELIST OPTIONAL POINTER PROTECTED SAVE TARGET VOLATILE VALUE }
2_optlist_autogen	{ _EMTPTY_ }
format-specification	{ '(' }
implicit-spec	{ 'TYPE' 'CLASS' INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
proc-interface	{ NAME_LITERAL 'TYPE' 'CLASS' INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
73_group_autogen	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
subscript	{ }
pointer-stmt	{ POINTER }
43_group_autogen	{ ',' }
use-stmt1_optlist_autogen	{ _EMTPTY_ }
71_group_autogen	{ ',' }
130_group_autogen	{ }
internal-subprogram-part2_opt_autogen	{ CONTAINS _EMTPTY_ }
actual-arg	{ NAME_LITERAL '*' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
175_group_autogen	{ NML }
90_group_autogen	{ ':' }
35_opt_autogen	{ ':' _EMTPTY_ }
continue-stmt	{ CONTINUE }
backspace-stmt	{ BACKSPACE }
19_optlist_autogen	{ _EMTPTY_ }
','9_opt_autogen	{ ',' _EMTPTY_ }
118_group_autogen	{ }
only-list1_opt_autogen	{ NAME_LITERAL OPERATOR ASSIGNMENT READ WRITE _EMTPTY_ }
where-stmt	{ WHERE }
vector-subscript	{ }
component-decl	{ NAME_LITERAL }
executable-construct	{ ALLOCATE NAME_LITERAL BACKSPACE CALL CLOSE CONTINUE CYCLE DEALLOCATE END ENDFILE ERROR_STOP EXIT FLUSH FORALL GO_TO IF INQUIRE LOCK NULLIFY OPEN PRINT READ RETURN REWIND STOP SYNC_ALL SYNC_IMAGES SYNC_MEMORY UNLOCK WAIT WHERE WRITE INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
38_optlist_autogen	{ _EMTPTY_ }
51_optlist_autogen	{ _EMTPTY_ }
signed-real-literal-constant	{ '+' '-' }
prefix1_opt_autogen	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL _EMTPTY_ }
59_optlist_autogen	{ _EMTPTY_ }
15_optlist_autogen	{ _EMTPTY_ }
46_group_autogen	{ }
specification-part7_opt_autogen	{ _EMTPTY_ }
forall-construct-stmt	{ NAME_LITERAL }
initial-data-target	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
146_group_autogen	{ NAME_LITERAL }
output-item-list1_opt_autogen	{ '(' _EMTPTY_ }
NAME_LITERAL6_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
assumed-size-spec-list	{ }
83_group_autogen	{ ':' }
121_group_autogen	{ ',' }
dummy-arg-list	{ NAME_LITERAL '*' }
23_optlist_autogen	{ _EMTPTY_ }
common-stmt	{ COMMON }
224_group_autogen	{ '(' }
31_opt_autogen	{ _EMTPTY_ }
actual-arg-spec-list2_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
23_group_autogen	{ ',' }
input-item-list	{ NAME_LITERAL '(' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
35_optlist_autogen	{ _EMTPTY_ }
71_opt_autogen	{ ',' _EMTPTY_ }
16_group_autogen	{ '*' }
80_optlist_autogen	{ _EMTPTY_ }
69_group_autogen	{ ',' }
52_optlist_autogen	{ _EMTPTY_ }
61_group_autogen	{ '[' }
144_opt_autogen	{ SUBROUTINE _EMTPTY_ }
117_opt_autogen	{ '.' _EMTPTY_ }
129_group_autogen	{ }
7_optlist_autogen	{ _EMTPTY_ }
data-stmt-value	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
178_group_autogen	{ ',' }
not-op1_opt_autogen	{ NOT _EMTPTY_ }
24_opt_autogen	{ ',' _EMTPTY_ }
subroutine-subprogram	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
103_group_autogen	{ '(' }
stop-stmt	{ STOP }
target-decl	{ NAME_LITERAL }
type-attr-spec-list	{ ABSTRACT BIND EXTENDS PUBLIC PRIVATE }
length-selector	{ '(' '*' }
sync-stat-list	{ STAT ERRMSG }
45_optlist_autogen	{ _EMTPTY_ }
169_group_autogen	{ UNIT }
defined-op1_opt_autogen	{ '.' _EMTPTY_ }
component-spec-list1_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
5_opt_autogen	{ ',' _EMTPTY_ }
114_group_autogen	{ ',' }
45_group_autogen	{ ',' }
output-item	{ '(' }
66_opt_autogen	{ '[' _EMTPTY_ }
23_opt_autogen	{ INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL NAME_LITERAL _EMTPTY_ }
19_group_autogen	{ ',' }
module-stmt	{ MODULE }
wait-spec-list	{ UNIT END EOR ERR ID IOMSG IOSTAT }
end-block-data-stmt	{ END }
189_group_autogen	{ INT_LITERAL_CONSTANT ':' CHAR_LITERAL_CONSTANT 'T' 'TL' 'TR' 'SS' 'SP' 'S' 'BN' 'BZ' 'RU' 'RD' 'RZ' 'RN' 'RC' 'RP' 'DC' 'DP' '+' '-' }
wait-spec	{ UNIT END EOR ERR ID IOMSG IOSTAT }
NAME_LITERAL30_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
120_opt_autogen	{ '.' _EMTPTY_ }
114_opt_autogen	{ UNIT _EMTPTY_ }
alloc-opt-list	{ ERRMSG MOLD SOURCE STAT }
49_group_autogen	{ ',' }
defined-operator	{ '.' '*' '/' '+' '-' EQ NE LT LE GT GE '=' '<' '>' NOT AND OR EQV NEQV }
NAME_LITERAL24_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
184_group_autogen	{ ',' }
182_group_autogen	{ ',' }
206_group_autogen	{ ',' }
1_opt_autogen	{ KIND _EMTPTY_ }
procedure-declaration-stmt	{ PROCEDURE }
main-program	{ PROGRAM }
end-forall-stmt	{ END_FORALL }
implicit-spec-list	{ 'TYPE' 'CLASS' INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
close-stmt	{ CLOSE }
allocate-coshape-spec-list	{ }
109_group_autogen	{ ',' }
declaration-construct	{ ENTRY FORMAT PARAMETER PROCEDURE 'TYPE' 'CLASS' NAME_LITERAL ENUM INTERFACE ABSTRACT_INTERFACE PUBLIC PRIVATE ALLOCATABLE ASYNCHRONOUS BIND CODIMENSION COMMON DATA DIMENSION EQUIVALENCE EXTERNAL INTENT INTRINSIC NAMELIST OPTIONAL POINTER PROTECTED SAVE TARGET VOLATILE VALUE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
94_opt_autogen	{ ELSE _EMTPTY_ }
external-stmt	{ EXTERNAL }
36_opt_autogen	{ ',' _EMTPTY_ }
common-block-object-list	{ NAME_LITERAL }
and-op	{ AND }
deferred-coshape-spec	{ ':' }
equivalence-object-list	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
21_group_autogen	{ '=' }
prefix	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
73_optlist_autogen	{ _EMTPTY_ }
111_opt_autogen	{ ',' _EMTPTY_ }
forall-body-construct1_optlist_autogen	{ _EMTPTY_ }
component-spec-list	{ NAME_LITERAL }
block-stmt	{ NAME_LITERAL }
192_group_autogen	{ '.' }
stop-code1_opt_autogen	{ _EMTPTY_ }
NAME_LITERAL23_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
access-stmt	{ PUBLIC PRIVATE }
initialization	{ '=' }
level-2-expr	{ }
135_opt_autogen	{ ':' _EMTPTY_ }
rename	{ NAME_LITERAL OPERATOR }
21_optlist_autogen	{ _EMTPTY_ }
bind-entity-list	{ NAME_LITERAL '/' }
211_group_autogen	{ ':' }
equivalence-stmt	{ EQUIVALENCE }
kind-selector2_opt_autogen	{ '(' _EMTPTY_ }
24_group_autogen	{ '(' }
initial-proc-target	{ NAME_LITERAL }
saved-entity	{ NAME_LITERAL '/' }
only-list	{ NAME_LITERAL OPERATOR ASSIGNMENT READ WRITE }
131_opt_autogen	{ ':' _EMTPTY_ }
145_group_autogen	{ ',' }
end-select-stmt	{ END_SELECT }
218_group_autogen	{ ':' }
contiguous-stmt	{ CONTIGUOUS }
unlock-stmt	{ UNLOCK }
112_opt_autogen	{ UNIT _EMTPTY_ }
array-spec	{ ':' }
10_opt_autogen	{ '[' _EMTPTY_ }
93_group_autogen	{ '-' }
143_opt_autogen	{ '(' _EMTPTY_ }
76_optlist_autogen	{ _EMTPTY_ }
entry-stmt	{ ENTRY }
substring-range	{ }
case-value-range-list	{ ':' }
and-operand	{ NOT }
name-list1_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
loop-control	{ ',' }
217_group_autogen	{ ',' }
program-unit	{ PROGRAM MODULE SUBMODULE BLOCK_DATA 'TYPE' 'CLASS' ELEMENTAL IMPURE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
9_group_autogen	{ ',' }
explicit-coshape-spec	{ }
128_opt_autogen	{ ',' _EMTPTY_ }
41_group_autogen	{ '*' }
implicit-part-stmt1_optlist_autogen	{ _EMTPTY_ }
mult-op	{ '*' '/' }
193_group_autogen	{ '.' }
sign2_opt_autogen	{ '+' '-' _EMTPTY_ }
47_group_autogen	{ }
assumed-size-spec	{ }
11_opt_autogen	{ '*' _EMTPTY_ }
module-nature	{ INTRINSIC NON_INTRINSIC }
134_group_autogen	{ ',' }
159_group_autogen	{ NAME_LITERAL }
stop-code2_opt_autogen	{ _EMTPTY_ }
sufix2_opt_autogen	{ BIND RESULT _EMTPTY_ }
88_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
end-enum-stmt	{ END_ENUM }
constant	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
38_opt_autogen	{ '[' _EMTPTY_ }
65_opt_autogen	{ '(' _EMTPTY_ }
program-stmt	{ PROGRAM }
28_optlist_autogen	{ _EMTPTY_ }
expr1_opt_autogen	{ _EMTPTY_ }
generic-spec	{ NAME_LITERAL OPERATOR ASSIGNMENT READ WRITE }
format-items	{ INT_LITERAL_CONSTANT ':' CHAR_LITERAL_CONSTANT 'T' 'TL' 'TR' 'SS' 'SP' 'S' 'BN' 'BZ' 'RU' 'RD' 'RZ' 'RN' 'RC' 'RP' 'DC' 'DP' '+' '-' }
47_opt_autogen	{ ':' _EMTPTY_ }
226_group_autogen	{ SUBROUTINE }
deferred-shape-spec	{ ':' }
explicit-shape-spec-list	{ }
where-body-construct	{ WHERE NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
133_group_autogen	{ '(' }
namelist-stmt	{ NAMELIST }
203_group_autogen	{ ',' }
inquire-spec-list	{ UNIT FILE ACCESS ACTION ASYNCHRONOUS BLANK DECIMAL DELIM DIRECT ENCODING ERR EXIST FORM FORMATTED ID IOMSG IOSTAT NAME_KEYWORD NAMED NEXTREC NUMBER OPENED PAD PENDING POS POSITION READ READWRITE RECL ROUND SEQUENTIAL SIGN SIZE STREAM UNFORMATTED WRITE }
intrinsic-type-spec	{ INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
mult-operand	{ '.' }
separate-module-subprogram	{ MODULE_PROCEDURE }
40_optlist_autogen	{ _EMTPTY_ }
w	{ INT_LITERAL_CONSTANT }
40_opt_autogen	{ ':' _EMTPTY_ }
NAME_LITERAL7_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
NAME_LITERAL4_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
nonlabel-do-stmt	{ NAME_LITERAL }
io-implied-do	{ '(' }
association	{ NAME_LITERAL }
asynchronous-stmt	{ ASYNCHRONOUS }
where-body-construct2_optlist_autogen	{ _EMTPTY_ }
NAME_LITERAL16_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
array-element	{ NAME_LITERAL }
type-bound-proc-decl	{ NAME_LITERAL }
210_group_autogen	{ BLOCK_DATA }
6_opt_autogen	{ '(' _EMTPTY_ }
saved-entity-list	{ NAME_LITERAL '/' }
blank-interp-edit-desc	{ 'BN' 'BZ' }
89_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
target-stmt	{ TARGET }
module-subprogram-part2_opt_autogen	{ CONTAINS _EMTPTY_ }
138_group_autogen	{ NAME_LITERAL }
','7_opt_autogen	{ ',' _EMTPTY_ }
level-3-expr	{ }
e	{ INT_LITERAL_CONSTANT }
4_optlist_autogen	{ _EMTPTY_ }
allocate-coshape-spec	{ }
component-part1_opt_autogen	{ _EMTPTY_ }
146_opt_autogen	{ '(' _EMTPTY_ }
99_opt_autogen	{ '(' _EMTPTY_ }
access-spec	{ PUBLIC PRIVATE }
write-stmt	{ WRITE }
proc-component-def-stmt	{ PROCEDURE }
data-stmt-value-list	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
io-control-spec-list	{ UNIT FMT NML ADVANCE ASYNCHRONOUS BLANK DECIMAL DELIM END EOR ERR ID IOMSG IOSTAT PAD POS REC ROUND SIGN SIZE }
sync-stat-list1_opt_autogen	{ STAT ERRMSG _EMTPTY_ }
data-target	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
33_group_autogen	{ '=' }
50_optlist_autogen	{ _EMTPTY_ }
79_opt_autogen	{ _EMTPTY_ }
72_opt_autogen	{ '*' _EMTPTY_ }
50_opt_autogen	{ ':' _EMTPTY_ }
import-stmt	{ IMPORT }
95_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
where-construct-stmt	{ NAME_LITERAL }
40_group_autogen	{ '[' }
91_group_autogen	{ ':' }
49_opt_autogen	{ ':' _EMTPTY_ }
84_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
','4_opt_autogen	{ ',' _EMTPTY_ }
56_optlist_autogen	{ _EMTPTY_ }
inquire-spec	{ UNIT FILE ACCESS ACTION ASYNCHRONOUS BLANK DECIMAL DELIM DIRECT ENCODING ERR EXIST FORM FORMATTED ID IOMSG IOSTAT NAME_KEYWORD NAMED NEXTREC NUMBER OPENED PAD PENDING POS POSITION READ READWRITE RECL ROUND SEQUENTIAL SIGN SIZE STREAM UNFORMATTED WRITE }
11_optlist_autogen	{ _EMTPTY_ }
expr2_opt_autogen	{ _EMTPTY_ }
76_opt_autogen	{ _EMTPTY_ }
endfile-stmt	{ ENDFILE }
explicit-shape-spec	{ }
rename-list	{ NAME_LITERAL OPERATOR }
else-if-stmt	{ ELSE_IF }
sufix	{ BIND RESULT }
50_group_autogen	{ ',' }
46_opt_autogen	{ ':' _EMTPTY_ }
implicit-part1_opt_autogen	{ _EMTPTY_ }
execution-part	{ ALLOCATE NAME_LITERAL BACKSPACE CALL CLOSE CONTINUE CYCLE DEALLOCATE END ENDFILE ERROR_STOP EXIT FLUSH FORALL GO_TO IF INQUIRE LOCK NULLIFY OPEN PRINT READ RETURN REWIND STOP SYNC_ALL SYNC_IMAGES SYNC_MEMORY UNLOCK WAIT WHERE WRITE INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
initialization1_opt_autogen	{ '=' _EMTPTY_ }
137_opt_autogen	{ '=' _EMTPTY_ }
critical-stmt	{ NAME_LITERAL }
55_group_autogen	{ }
216_group_autogen	{ '=' }
74_optlist_autogen	{ _EMTPTY_ }
unlimited-format-item	{ '*' }
null-init	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
char-literal-constant	{ CHAR_LITERAL_CONSTANT }
end-do-stmt	{ END_DO }
85_group_autogen	{ ',' }
end-interface-stmt	{ END_INTERFACE }
inner-shared-do-construct	{ NAME_LITERAL }
55_opt_autogen	{ ':' _EMTPTY_ }
interface-body	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
130_opt_autogen	{ ',' _EMTPTY_ }
nullify-stmt	{ NULLIFY }
name-list	{ NAME_LITERAL }
forall-header	{ '(' }
component-def-stmt	{ 'TYPE' 'CLASS' PROCEDURE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
3_opt_autogen	{ ',' _EMTPTY_ }
label-list	{ INT_LITERAL_CONSTANT }
78_optlist_autogen	{ _EMTPTY_ }
87_opt_autogen	{ ':' _EMTPTY_ }
43_opt_autogen	{ ',' _EMTPTY_ }
186_group_autogen	{ ',' }
55_optlist_autogen	{ _EMTPTY_ }
202_group_autogen	{ MODULE }
where-body-construct3_optlist_autogen	{ _EMTPTY_ }
interface-specification1_optlist_autogen	{ _EMTPTY_ }
197_group_autogen	{ 'E' }
25_opt_autogen	{ '(' _EMTPTY_ }
69_optlist_autogen	{ _EMTPTY_ }
64_opt_autogen	{ ',' _EMTPTY_ }
v	{ '+' '-' }
round-edit-desc	{ 'RU' 'RD' 'RZ' 'RN' 'RC' 'RP' }
lower-bound	{ }
boz-literal-constant	{ BOZ_LITERAL_CONSTANT }
94_group_autogen	{ ',' }
79_optlist_autogen	{ _EMTPTY_ }
101_group_autogen	{ ',' }
implicit-stmt	{ IMPLICIT IMPLICIT_NONE }
type-bound-proc-binding	{ PROCEDURE GENERIC FINAL }
34_optlist_autogen	{ _EMTPTY_ }
ac-implied-do-control	{ NAME_LITERAL }
signed-int-literal-constant	{ '+' '-' }
35_group_autogen	{ INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL NAME_LITERAL }
24_optlist_autogen	{ _EMTPTY_ }
d	{ INT_LITERAL_CONSTANT }
optional-stmt	{ OPTIONAL }
27_opt_autogen	{ '*' _EMTPTY_ }
18_optlist_autogen	{ _EMTPTY_ }
36_optlist_autogen	{ _EMTPTY_ }
131_group_autogen	{ }
142_group_autogen	{ ':' }
58_group_autogen	{ ',' }
59_group_autogen	{ ':' }
33_opt_autogen	{ _EMTPTY_ }
41_opt_autogen	{ ':' _EMTPTY_ }
allocatable-decl-list	{ NAME_LITERAL }
stop-code	{ }
81_opt_autogen	{ '(' _EMTPTY_ }
io-implied-do-object-list	{ NAME_LITERAL '(' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
execution-part-construct	{ FORMAT ENTRY DATA ALLOCATE NAME_LITERAL BACKSPACE CALL CLOSE CONTINUE CYCLE DEALLOCATE END ENDFILE ERROR_STOP EXIT FLUSH FORALL GO_TO IF INQUIRE LOCK NULLIFY OPEN PRINT READ RETURN REWIND STOP SYNC_ALL SYNC_IMAGES SYNC_MEMORY UNLOCK WAIT WHERE WRITE INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
program	{ PROGRAM MODULE SUBMODULE BLOCK_DATA 'TYPE' 'CLASS' ELEMENTAL IMPURE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
end-do	{ END_DO CONTINUE }
implicit-part-stmt	{ IMPLICIT IMPLICIT_NONE PARAMETER FORMAT ENTRY }
125_opt_autogen	{ '(' _EMTPTY_ }
private-components-stmt	{ PRIVATE }
80_group_autogen	{ ':' }
outer-shared-do-construct	{ NAME_LITERAL }
4_group_autogen	{ ',' }
type-bound-procedure-stmt	{ PROCEDURE }
private-or-sequence	{ PRIVATE SEQUENCE }
module-subprogram1_optlist_autogen	{ _EMTPTY_ }
type-bound-procedure-part	{ CONTAINS }
equivalence-set	{ '(' }
case-stmt	{ CASE }
forall-stmt	{ FORALL }
125_group_autogen	{ }
NAME_LITERAL17_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
call-stmt	{ CALL }
format-items1_opt_autogen	{ INT_LITERAL_CONSTANT ':' CHAR_LITERAL_CONSTANT 'T' 'TL' 'TR' 'SS' 'SP' 'S' 'BN' 'BZ' 'RU' 'RD' 'RZ' 'RN' 'RC' 'RP' 'DC' 'DP' '+' '-' _EMTPTY_ }
value-stmt	{ VALUE }
internal-subprogram-part3_opt_autogen	{ CONTAINS _EMTPTY_ }
48_group_autogen	{ }
39_optlist_autogen	{ _EMTPTY_ }
170_group_autogen	{ ',' }
93_opt_autogen	{ ',' _EMTPTY_ }
kind-selector3_opt_autogen	{ '(' _EMTPTY_ }
167_group_autogen	{ UNIT }
binding-attr-list	{ PASS NOPASS NON_OVERRIDABLE DEFERRED PUBLIC PRIVATE }
execution-part3_opt_autogen	{ ALLOCATE NAME_LITERAL BACKSPACE CALL CLOSE CONTINUE CYCLE DEALLOCATE END ENDFILE ERROR_STOP EXIT FLUSH FORALL GO_TO IF INQUIRE LOCK NULLIFY OPEN PRINT READ RETURN REWIND STOP SYNC_ALL SYNC_IMAGES SYNC_MEMORY UNLOCK WAIT WHERE WRITE INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT _EMTPTY_ }
NAME_LITERAL25_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
136_opt_autogen	{ ',' _EMTPTY_ }
m	{ INT_LITERAL_CONSTANT }
42_opt_autogen	{ ':' _EMTPTY_ }
45_opt_autogen	{ ':' _EMTPTY_ }
prefix-spec1_list_autogen	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
100_opt_autogen	{ ',' _EMTPTY_ }
68_opt_autogen	{ _EMTPTY_ }
kind-selector4_opt_autogen	{ '(' _EMTPTY_ }
case-construct	{ NAME_LITERAL }
34_opt_autogen	{ _EMTPTY_ }
format-item	{ INT_LITERAL_CONSTANT ':' CHAR_LITERAL_CONSTANT 'T' 'TL' 'TR' 'SS' 'SP' 'S' 'BN' 'BZ' 'RU' 'RD' 'RZ' 'RN' 'RC' 'RP' 'DC' 'DP' '+' '-' }
procedure-designator	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
sync-stat-list2_opt_autogen	{ STAT ERRMSG _EMTPTY_ }
type-param-inquiry	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
63_opt_autogen	{ INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL NAME_LITERAL _EMTPTY_ }
6_group_autogen	{ ',' }
add-operand	{ }
196_group_autogen	{ 'E' }
3_optlist_autogen	{ _EMTPTY_ }
alt-return-spec	{ '*' }
file-unit-number	{ }
pointer-decl-list	{ NAME_LITERAL }
data-component-def-stmt	{ 'TYPE' 'CLASS' INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
kind-selector5_opt_autogen	{ '(' _EMTPTY_ }
ac-spec	{ INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL NAME_LITERAL }
end-subroutine-stmt	{ END }
47_optlist_autogen	{ _EMTPTY_ }
binding-private-stmt1_opt_autogen	{ PRIVATE _EMTPTY_ }
188_group_autogen	{ ',' }
88_group_autogen	{ '[' }
30_opt_autogen	{ _EMTPTY_ }
60_opt_autogen	{ '(' _EMTPTY_ }
proc-interface2_opt_autogen	{ NAME_LITERAL 'TYPE' 'CLASS' INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL _EMTPTY_ }
14_opt_autogen	{ '=' _EMTPTY_ }
literal-constant	{ INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
io-control-spec	{ UNIT FMT NML ADVANCE ASYNCHRONOUS BLANK DECIMAL DELIM END EOR ERR ID IOMSG IOSTAT PAD POS REC ROUND SIGN SIZE }
forall-limit	{ }
72_optlist_autogen	{ _EMTPTY_ }
defined-op	{ '.' }
163_group_autogen	{ '(' }
54_optlist_autogen	{ _EMTPTY_ }
124_group_autogen	{ '*' }
126_opt_autogen	{ PROGRAM _EMTPTY_ }
implied-shape-spec	{ }
86_opt_autogen	{ ',' _EMTPTY_ }
entity-decl-list	{ NAME_LITERAL }
191_group_autogen	{ '.' }
image-selector	{ '[' }
194_group_autogen	{ '.' }
type-param-spec	{ NAME_LITERAL }
data-edit-desc	{ 'I' 'B' 'O' 'Z' 'F' 'E' 'EN' 'ES' 'G' 'L' 'A' 'D' 'DT' }
70_opt_autogen	{ _EMTPTY_ }
119_opt_autogen	{ '.' _EMTPTY_ }
200_group_autogen	{ ',' }
32_optlist_autogen	{ _EMTPTY_ }
allocation-list	{ NAME_LITERAL }
1_optlist_autogen	{ _EMTPTY_ }
67_opt_autogen	{ _EMTPTY_ }
section-subscript-list	{ }
do-body	{ }
8_optlist_autogen	{ _EMTPTY_ }
intrinsic-operator	{ '*' '/' '+' '-' EQ NE LT LE GT GE '=' '<' '>' NOT AND OR EQV NEQV }
142_opt_autogen	{ FUNCTION _EMTPTY_ }
primary	{ NAME_LITERAL '(' '[' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
209_group_autogen	{ SUBMODULE }
75_group_autogen	{ ':' }
NAME_LITERAL10_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
data-stmt-set	{ NAME_LITERAL '(' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
57_opt_autogen	{ '/' _EMTPTY_ }
forall-triplet-spec-list	{ NAME_LITERAL }
164_group_autogen	{ ',' }
actual-arg-spec-list1_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
connect-spec	{ UNIT ACCESS ACTION ASYNCHRONOUS BLANK DECIMAL DELIM ENCODING ERR FILE FORM IOMSG IOSTAT NEWUNIT PAD POSITION RECL ROUND SIGN STATUS }
or-op	{ OR }
case-selector	{ '(' DEFAULT }
procedure-stmt	{ MODULE }
168_group_autogen	{ ',' }
expr	{ }
13_opt_autogen	{ ',' _EMTPTY_ }
129_opt_autogen	{ ',' _EMTPTY_ }
124_opt_autogen	{ 'E' '.' _EMTPTY_ }
62_optlist_autogen	{ _EMTPTY_ }
constant-subobject	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
mp-subprogram-stmt	{ MODULE_PROCEDURE }
21_opt_autogen	{ ':' _EMTPTY_ }
coindexed-named-object	{ NAME_LITERAL }
148_group_autogen	{ NAME_LITERAL }
forall-body-construct	{ WHERE NAME_LITERAL FORALL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
59_opt_autogen	{ '%' _EMTPTY_ }
contains-stmt	{ CONTAINS }
53_opt_autogen	{ '[' _EMTPTY_ }
specification-part5_opt_autogen	{ _EMTPTY_ }
132_opt_autogen	{ SUBMODULE _EMTPTY_ }
proc-attr-spec	{ PUBLIC PRIVATE INTENT OPTIONAL POINTER SAVE BIND }
type-spec	{ INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL NAME_LITERAL }
do-construct	{ NAME_LITERAL }
masked-elsewhere-stmt	{ ELSEWHERE }
214_group_autogen	{ ',' }
codimension-decl	{ NAME_LITERAL }
36_group_autogen	{ ',' }
63_optlist_autogen	{ _EMTPTY_ }
parent-string	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
specification-part2_opt_autogen	{ _EMTPTY_ }
upper-cobound	{ }
subscript2_opt_autogen	{ _EMTPTY_ }
122_group_autogen	{ ',' }
if-construct	{ NAME_LITERAL }
100_group_autogen	{ '(' }
112_group_autogen	{ '[' }
58_optlist_autogen	{ _EMTPTY_ }
12_opt_autogen	{ '(' _EMTPTY_ }
99_group_autogen	{ ',' }
save-stmt	{ SAVE }
structure-component	{ NAME_LITERAL }
end-block-stmt	{ END_BLOCK }
decimal-edit-desc	{ 'DC' 'DP' }
190_group_autogen	{ ',' }
dealloc-opt-list	{ STAT ERRMSG }
','2_opt_autogen	{ ',' _EMTPTY_ }
107_opt_autogen	{ ',' _EMTPTY_ }
34_group_autogen	{ ',' }
generic-spec1_opt_autogen	{ NAME_LITERAL OPERATOR ASSIGNMENT READ WRITE _EMTPTY_ }
44_optlist_autogen	{ _EMTPTY_ }
121_opt_autogen	{ 'E' _EMTPTY_ }
proc-language-binding-spec1_opt_autogen	{ BIND _EMTPTY_ }
96_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
181_group_autogen	{ UNIT }
228_group_autogen	{ '(' }
141_opt_autogen	{ RESULT _EMTPTY_ }
38_group_autogen	{ ',' }
allocate-shape-spec	{ }
43_optlist_autogen	{ _EMTPTY_ }
13_group_autogen	{ ',' }
26_group_autogen	{ ':' }
data-ref	{ NAME_LITERAL }
162_group_autogen	{ ',' }
9_optlist_autogen	{ _EMTPTY_ }
flush-stmt	{ FLUSH }
136_group_autogen	{ ELSEWHERE }
70_group_autogen	{ ',' }
139_opt_autogen	{ '(' _EMTPTY_ }
function-reference	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
end-mp-subprogram-stmt	{ END }
type-bound-generic-stmt	{ GENERIC }
ac-implied-do	{ '(' }
component-def-stmt1_optlist_autogen	{ _EMTPTY_ }
22_group_autogen	{ ',' }
105_group_autogen	{ ',' }
allocatable-stmt	{ ALLOCATABLE }
26_opt_autogen	{ '[' _EMTPTY_ }
31_group_autogen	{ ',' }
56_group_autogen	{ ',' }
program-unit1_list_autogen	{ PROGRAM MODULE SUBMODULE BLOCK_DATA 'TYPE' 'CLASS' ELEMENTAL IMPURE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
end-submodule-stmt	{ END }
end-critical-stmt	{ END_CRITICAL }
pointer-assignment-stmt	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
215_group_autogen	{ IN OUT INOUT }
75_opt_autogen	{ _EMTPTY_ }
letter-spec-list	{ NAME_LITERAL }
111_group_autogen	{ '(' }
end-select-type-stmt	{ END_SELECT }
12_group_autogen	{ ',' }
actual-arg-spec-list	{ NAME_LITERAL }
pointer-decl	{ NAME_LITERAL }
160_group_autogen	{ '(' }
48_opt_autogen	{ '(' _EMTPTY_ }
14_optlist_autogen	{ _EMTPTY_ }
223_group_autogen	{ FUNCTION }
116_group_autogen	{ ',' }
199_group_autogen	{ '(' }
dimension-stmt	{ DIMENSION }
64_group_autogen	{ ':' }
106_opt_autogen	{ ',' _EMTPTY_ }
28_group_autogen	{ NAME_LITERAL }
126_group_autogen	{ }
69_opt_autogen	{ _EMTPTY_ }
block-data	{ BLOCK_DATA }
open-stmt	{ OPEN }
227_group_autogen	{ PROCEDURE }
end-program-stmt	{ END }
172_group_autogen	{ ',' }
57_group_autogen	{ ':' }
220_group_autogen	{ NAME_LITERAL }
execution-part-construct1_optlist_autogen	{ _EMTPTY_ }
66_optlist_autogen	{ _EMTPTY_ }
103_opt_autogen	{ ',' _EMTPTY_ }
end-where-stmt	{ END_WHERE }
3_group_autogen	{ KIND }
NAME_LITERAL12_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
lock-stmt	{ LOCK }
only	{ NAME_LITERAL OPERATOR ASSIGNMENT READ WRITE }
module-subprogram-part1_opt_autogen	{ CONTAINS _EMTPTY_ }
','6_opt_autogen	{ ',' _EMTPTY_ }
sequence-stmt	{ SEQUENCE }
120_group_autogen	{ ',' }
174_group_autogen	{ FMT }
180_group_autogen	{ ',' }
select-type-stmt	{ NAME_LITERAL }
interface-specification	{ MODULE 'TYPE' 'CLASS' ELEMENTAL IMPURE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
program-stmt1_opt_autogen	{ PROGRAM _EMTPTY_ }
153_group_autogen	{ NAME_LITERAL }
53_group_autogen	{ }
72_group_autogen	{ ',' }
execution-part-construct2_optlist_autogen	{ _EMTPTY_ }
not-op	{ NOT }
implicit-part	{ }
156_group_autogen	{ ',' }
7_opt_autogen	{ '=' _EMTPTY_ }
equiv-operand	{ }
data-i-do-object	{ '(' NAME_LITERAL }
115_group_autogen	{ }
assignment-stmt	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
5_optlist_autogen	{ _EMTPTY_ }
NAME_LITERAL20_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
execution-part1_opt_autogen	{ ALLOCATE NAME_LITERAL BACKSPACE CALL CLOSE CONTINUE CYCLE DEALLOCATE END ENDFILE ERROR_STOP EXIT FLUSH FORALL GO_TO IF INQUIRE LOCK NULLIFY OPEN PRINT READ RETURN REWIND STOP SYNC_ALL SYNC_IMAGES SYNC_MEMORY UNLOCK WAIT WHERE WRITE INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT _EMTPTY_ }
NAME_LITERAL28_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
sufix1_opt_autogen	{ BIND RESULT _EMTPTY_ }
65_optlist_autogen	{ _EMTPTY_ }
type-bound-proc-binding1_optlist_autogen	{ _EMTPTY_ }
letter-spec	{ NAME_LITERAL }
sync-all-stmt	{ SYNC_ALL }
16_optlist_autogen	{ _EMTPTY_ }
k	{ '+' '-' }
enumerator-def-stmt	{ ENUMERATOR }
format-stmt	{ FORMAT }
codimension-decl-list	{ NAME_LITERAL }
17_group_autogen	{ ',' }
67_optlist_autogen	{ _EMTPTY_ }
33_optlist_autogen	{ _EMTPTY_ }
4_opt_autogen	{ LEN _EMTPTY_ }
20_group_autogen	{ ',' }
char-string-edit-desc	{ CHAR_LITERAL_CONSTANT }
89_group_autogen	{ ',' }
48_optlist_autogen	{ _EMTPTY_ }
allocate-shape-spec-list	{ }
104_opt_autogen	{ UNIT _EMTPTY_ }
deferred-shape-spec-list	{ ':' }
78_group_autogen	{ ':' }
145_opt_autogen	{ PROCEDURE _EMTPTY_ }
loop-control1_opt_autogen	{ ',' _EMTPTY_ }
NAME_LITERAL18_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
42_group_autogen	{ '*' }
183_group_autogen	{ UNIT }
data-stmt	{ DATA }
127_group_autogen	{ }
where-body-construct1_optlist_autogen	{ _EMTPTY_ }
scalar-structure-component	{ NAME_LITERAL }
60_optlist_autogen	{ _EMTPTY_ }
18_opt_autogen	{ '(' _EMTPTY_ }
deallocate-stmt	{ DEALLOCATE }
specification-part	{ }
computed-goto-stmt	{ GO_TO }
14_group_autogen	{ '(' }
77_group_autogen	{ ':' }
assumed-shape-spec-list	{ }
execution-part4_opt_autogen	{ ALLOCATE NAME_LITERAL BACKSPACE CALL CLOSE CONTINUE CYCLE DEALLOCATE END ENDFILE ERROR_STOP EXIT FLUSH FORALL GO_TO IF INQUIRE LOCK NULLIFY OPEN PRINT READ RETURN REWIND STOP SYNC_ALL SYNC_IMAGES SYNC_MEMORY UNLOCK WAIT WHERE WRITE INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT _EMTPTY_ }
proc-pointer-object	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
cosubscript	{ }
flush-spec-list	{ UNIT IOSTAT IOMSG ERR }
equivalence-object	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
28_opt_autogen	{ '*' _EMTPTY_ }
only-use-name	{ NAME_LITERAL }
declaration-type-spec	{ 'TYPE' 'CLASS' INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
allocate-object-list	{ NAME_LITERAL }
75_optlist_autogen	{ _EMTPTY_ }
106_group_autogen	{ ':' }
block-do-construct	{ NAME_LITERAL }
specification-part1_opt_autogen	{ _EMTPTY_ }
53_optlist_autogen	{ _EMTPTY_ }
54_group_autogen	{ ',' }
complex-part-designator	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
stride	{ }
do-term-shared-stmt	{ ALLOCATE NAME_LITERAL BACKSPACE CALL CLOSE CONTINUE CYCLE DEALLOCATE END ENDFILE ERROR_STOP EXIT FLUSH FORALL GO_TO IF INQUIRE LOCK NULLIFY OPEN PRINT READ RETURN REWIND STOP SYNC_ALL SYNC_IMAGES SYNC_MEMORY UNLOCK WAIT WHERE WRITE INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
212_group_autogen	{ ':' }
end-module-stmt	{ END }
sign	{ '+' '-' }
185_group_autogen	{ UNIT }
structure-constructor	{ NAME_LITERAL }
binding-attr	{ PASS NOPASS NON_OVERRIDABLE DEFERRED PUBLIC PRIVATE }
prefix-spec	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
type-param-value	{ '*' ':' }
type-param-decl-list	{ NAME_LITERAL }
subroutine-stmt	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
NAME_LITERAL5_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
57_optlist_autogen	{ _EMTPTY_ }
format	{ INT_LITERAL_CONSTANT '*' }
76_group_autogen	{ ',' }
173_group_autogen	{ UNIT }
NAME_LITERAL21_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
proc-component-attr-spec-list	{ POINTER PASS NOPASS PUBLIC PRIVATE }
149_group_autogen	{ NAME_LITERAL }
type-attr-spec	{ ABSTRACT BIND EXTENDS PUBLIC PRIVATE }
intent-spec	{ IN OUT INOUT }
prefix2_opt_autogen	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL _EMTPTY_ }
select-case-stmt	{ NAME_LITERAL }
115_opt_autogen	{ UNIT _EMTPTY_ }
52_opt_autogen	{ '(' _EMTPTY_ }
92_group_autogen	{ ',' }
sign-edit-desc	{ 'SS' 'SP' 'S' }
select-type-construct	{ NAME_LITERAL }
protected-stmt	{ PROTECTED }
97_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
143_group_autogen	{ ',' }
target-decl-list	{ NAME_LITERAL }
use-stmt	{ USE }
187_group_autogen	{ UNIT }
17_opt_autogen	{ ':' _EMTPTY_ }
end-function-stmt	{ END }
25_group_autogen	{ ',' }
109_opt_autogen	{ FMT _EMTPTY_ }
array-constructor	{ '(' '[' }
proc-component-attr-spec	{ POINTER PASS NOPASS PUBLIC PRIVATE }
print-stmt	{ PRINT }
15_opt_autogen	{ ',' _EMTPTY_ }
interface-stmt	{ INTERFACE ABSTRACT_INTERFACE }
22_optlist_autogen	{ _EMTPTY_ }
part-ref	{ NAME_LITERAL }
proc-interface1_opt_autogen	{ NAME_LITERAL 'TYPE' 'CLASS' INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL _EMTPTY_ }
block-construct	{ NAME_LITERAL }
171_group_autogen	{ ',' }
where-assignment-stmt	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
10_optlist_autogen	{ _EMTPTY_ }
goto-stmt	{ GO_TO }
component-decl-list	{ NAME_LITERAL }
component-attr-spec-list	{ ALLOCATABLE CODIMENSION CONTIGUOUS DIMENSION POINTER PUBLIC PRIVATE }
forall-triplet-spec	{ NAME_LITERAL }
NAME_LITERAL22_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
13_optlist_autogen	{ _EMTPTY_ }
level-2-expr1_opt_autogen	{ _EMTPTY_ }
98_group_autogen	{ '/' }
32_opt_autogen	{ _EMTPTY_ }
17_optlist_autogen	{ _EMTPTY_ }
input-item	{ NAME_LITERAL '(' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
assumed-shape-spec	{ }
proc-language-binding-spec2_opt_autogen	{ BIND _EMTPTY_ }
section-subscript	{ }
data-stmt-object	{ NAME_LITERAL '(' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
proc-component-ref	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
58_opt_autogen	{ '(' _EMTPTY_ }
specification-part10_opt_autogen	{ _EMTPTY_ }
pointer-object	{ NAME_LITERAL }
elsewhere-stmt	{ ELSEWHERE }
io-unit	{ '*' NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
42_optlist_autogen	{ _EMTPTY_ }
or-operand	{ }
8_group_autogen	{ ',' }
submodule-stmt	{ SUBMODULE }
18_group_autogen	{ '(' }
222_group_autogen	{ RESULT }
201_group_autogen	{ PROGRAM }
component-data-source	{ NAME_LITERAL INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
161_group_autogen	{ ',' }
cycle-stmt	{ CYCLE }
allocate-object	{ NAME_LITERAL }
import-stmt1_optlist_autogen	{ _EMTPTY_ }
sync-images-stmt	{ SYNC_IMAGES }
77_optlist_autogen	{ _EMTPTY_ }
44_group_autogen	{ ',' }
sign1_opt_autogen	{ '+' '-' _EMTPTY_ }
221_group_autogen	{ ',' }
allocatable-decl	{ NAME_LITERAL }
147_group_autogen	{ NAME_LITERAL }
block	{ }
component-spec	{ NAME_LITERAL }
108_group_autogen	{ INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL NAME_LITERAL }
component-part	{ }
output-item-list	{ '(' }
NAME_LITERAL2_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
end-if-stmt	{ END_IF }
label-do-stmt	{ NAME_LITERAL }
execution-part2_opt_autogen	{ ALLOCATE NAME_LITERAL BACKSPACE CALL CLOSE CONTINUE CYCLE DEALLOCATE END ENDFILE ERROR_STOP EXIT FLUSH FORALL GO_TO IF INQUIRE LOCK NULLIFY OPEN PRINT READ RETURN REWIND STOP SYNC_ALL SYNC_IMAGES SYNC_MEMORY UNLOCK WAIT WHERE WRITE INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT _EMTPTY_ }
65_group_autogen	{ ',' }
37_group_autogen	{ ',' }
15_group_autogen	{ '[' }
117_group_autogen	{ }
62_group_autogen	{ ',' }
add-op	{ '+' '-' }
139_group_autogen	{ NAME_LITERAL }
110_opt_autogen	{ NML _EMTPTY_ }
84_group_autogen	{ ':' }
module	{ MODULE }
30_optlist_autogen	{ _EMTPTY_ }
enumerator-list	{ NAME_LITERAL }
26_optlist_autogen	{ _EMTPTY_ }
allocation	{ NAME_LITERAL }
specification-part4_opt_autogen	{ _EMTPTY_ }
lock-stat	{ ACQUIRED_LOCK STAT ERRMSG }
5_group_autogen	{ LEN }
subscript-triplet	{ }
type-bound-proc-decl-list	{ NAME_LITERAL }
subscript1_opt_autogen	{ _EMTPTY_ }
intent-stmt	{ INTENT }
char-selector1_opt_autogen	{ '(' '*' _EMTPTY_ }
interface-block	{ INTERFACE ABSTRACT_INTERFACE }
113_opt_autogen	{ UNIT _EMTPTY_ }
enumerator-def-stmt1_optlist_autogen	{ _EMTPTY_ }
80_opt_autogen	{ _EMTPTY_ }
action-stmt	{ ALLOCATE NAME_LITERAL BACKSPACE CALL CLOSE CONTINUE CYCLE DEALLOCATE END ENDFILE ERROR_STOP EXIT FLUSH FORALL GO_TO IF INQUIRE LOCK NULLIFY OPEN PRINT READ RETURN REWIND STOP SYNC_ALL SYNC_IMAGES SYNC_MEMORY UNLOCK WAIT WHERE WRITE INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
208_group_autogen	{ ':' }
implied-shape-spec-list	{ }
81_group_autogen	{ '(' }
deferred-coshape-spec-list	{ ':' }
loop-control2_opt_autogen	{ ',' _EMTPTY_ }
internal-subprogram-part	{ CONTAINS }
derived-type-stmt	{ 'TYPE' }
204_group_autogen	{ ',' }
51_group_autogen	{ ',' }
data-stmt-object-list	{ NAME_LITERAL '(' INT_LITERAL_CONSTANT REAL_LITERAL_CONSTANT COMPLEX_LITERAL_CONSTANT LOGICAL_LITERAL_CONSTANT CHAR_LITERAL_CONSTANT BOZ_LITERAL_CONSTANT }
dealloc-opt	{ STAT ERRMSG }
2_opt_autogen	{ KIND _EMTPTY_ }
119_group_autogen	{ }
sync-memory-stmt	{ SYNC_MEMORY }
37_optlist_autogen	{ _EMTPTY_ }
inquire-stmt	{ INQUIRE }
end-associate-stmt	{ END_ASSOCIATE }
20_optlist_autogen	{ _EMTPTY_ }
end-type-stmt	{ END_TYPE }
language-binding-spec	{ BIND }
179_group_autogen	{ ',' }
70_optlist_autogen	{ _EMTPTY_ }
enum-def-stmt	{ ENUM }
bounds-remapping	{ }
type-guard-stmt	{ TYPE_IS CLASS_IS CLASS_DEFAULT }
stmt-function-stmt	{ NAME_LITERAL }
','8_opt_autogen	{ ',' _EMTPTY_ }
char-selector	{ '(' '*' }
external-subprogram	{ 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
alloc-opt	{ ERRMSG MOLD SOURCE STAT }
level-1-expr	{ '.' }
140_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
char-literal-constant1_opt_autogen	{ CHAR_LITERAL_CONSTANT _EMTPTY_ }
w1_opt_autogen	{ INT_LITERAL_CONSTANT _EMTPTY_ }
concat-op	{ '/' }
39_group_autogen	{ '(' }
module-subprogram	{ MODULE_PROCEDURE 'TYPE' 'CLASS' ELEMENTAL IMPURE MODULE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
90_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
87_group_autogen	{ '(' }
68_optlist_autogen	{ _EMTPTY_ }
137_group_autogen	{ ELSEWHERE }
123_group_autogen	{ ',' }
final-procedure-stmt	{ FINAL }
shared-term-do-construct	{ NAME_LITERAL }
named-constant-def	{ NAME_LITERAL }
107_group_autogen	{ ',' }
lock-stat-list	{ ACQUIRED_LOCK STAT ERRMSG }
enum-def	{ ENUM }
execution-part-construct3_optlist_autogen	{ _EMTPTY_ }
image-selector1_opt_autogen	{ '[' _EMTPTY_ }
return-stmt	{ RETURN }
NAME_LITERAL14_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
access-id-list	{ NAME_LITERAL OPERATOR ASSIGNMENT READ WRITE }
166_group_autogen	{ ',' }
74_opt_autogen	{ _EMTPTY_ }
29_optlist_autogen	{ _EMTPTY_ }
74_group_autogen	{ ',' }
image-set	{ '*' }
power-op	{ '*' }
dimension-spec	{ DIMENSION }
20_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
type-param-def-stmt1_optlist_autogen	{ _EMTPTY_ }
150_group_autogen	{ ',' }
133_opt_autogen	{ BLOCK_DATA _EMTPTY_ }
101_opt_autogen	{ '(' _EMTPTY_ }
pointer-object-list	{ NAME_LITERAL }
1_group_autogen	{ ',' }
_START_	{ PROGRAM MODULE SUBMODULE BLOCK_DATA 'TYPE' 'CLASS' ELEMENTAL IMPURE PURE RECURSIVE INTEGER REAL DOUBLE_PRECISION COMPLEX CHARACTER LOGICAL }
else-stmt	{ ELSE }
151_group_autogen	{ ELSE_IF }
NAME_LITERAL11_opt_autogen	{ NAME_LITERAL _EMTPTY_ }
78_opt_autogen	{ _EMTPTY_ }
123_opt_autogen	{ 'E' _EMTPTY_ }
proc-decl-list	{ NAME_LITERAL }
