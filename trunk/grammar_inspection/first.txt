data-implied-do	{LEFT_PARENTHESIS: '(' (TERMINAL) }
level-4-expr	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), NOT: '' (TERMINAL) }
12_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
r	{INT_LITERAL_CONSTANT: '' (TERMINAL) }
iomsg-variable	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
nonblock-do-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL) }
function-subprogram	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
if-then-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL) }
dummy-arg	{NAME_LITERAL: '' (TERMINAL), ASTERIK: '*' (TERMINAL) }
proc-language-binding-spec	{NAME_LITERAL: 'BIND' (TERMINAL) }
27_group_autogen	{COMMA: ',' (TERMINAL) }
sync-stat	{NAME_LITERAL: 'STAT' (TERMINAL), NAME_LITERAL: 'ERRMSG' (TERMINAL) }
actual-arg-spec	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), ASTERIK: '*' (TERMINAL) }
63_group_autogen	{COMMA: ',' (TERMINAL) }
22_opt_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
type-param-attr-spec	{NAME_LITERAL: 'KIND' (TERMINAL), NAME_LITERAL: 'LEN' (TERMINAL) }
parameter-stmt	{NAME_LITERAL: 'PARAMETER' (TERMINAL) }
array-section	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
substring	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
io-implied-do-object	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
proc-target	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
type-declaration-stmt	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
binding-private-stmt	{NAME_LITERAL: 'PRIVATE' (TERMINAL) }
v-list	{INT_LITERAL_CONSTANT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
type-param-def-stmt	{NAME_LITERAL: 'INTEGER' (TERMINAL) }
flush-spec	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
','3_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
r1_opt_autogen	{INT_LITERAL_CONSTANT: '' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
9_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
bounds-spec	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
','1_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
data-stmt-repeat	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
bind-entity	{NAME_LITERAL: '' (TERMINAL), SLASH: '/' (TERMINAL) }
data-stmt-constant	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL) }
error-stop-stmt	{NAME_LITERAL: 'ERROR' (TERMINAL) }
31_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
25_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
intrinsic-stmt	{NAME_LITERAL: 'INTRINSIC' (TERMINAL) }
82_group_autogen	{EQUALS: '=' (TERMINAL) }
association-list	{NAME_LITERAL: '' (TERMINAL) }
selector	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
control-edit-desc	{INT_LITERAL_CONSTANT: '' (TERMINAL), _EMTPTY_: '' (TERMINAL), SLASH: '/' (TERMINAL), COLON: ':' (TERMINAL), NAME_LITERAL: 'T' (TERMINAL), NAME_LITERAL: 'TL' (TERMINAL), NAME_LITERAL: 'TR' (TERMINAL), NAME_LITERAL: 'SS' (TERMINAL), NAME_LITERAL: 'SP' (TERMINAL), NAME_LITERAL: 'S' (TERMINAL), NAME_LITERAL: 'BN' (TERMINAL), NAME_LITERAL: 'BZ' (TERMINAL), NAME_LITERAL: 'RU' (TERMINAL), NAME_LITERAL: 'RD' (TERMINAL), NAME_LITERAL: 'RZ' (TERMINAL), NAME_LITERAL: 'RN' (TERMINAL), NAME_LITERAL: 'RC' (TERMINAL), NAME_LITERAL: 'RP' (TERMINAL), NAME_LITERAL: 'DC' (TERMINAL), NAME_LITERAL: 'DP' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
variable	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
52_group_autogen	{NAME_LITERAL: 'CASE' (TERMINAL) }
common-block-object	{NAME_LITERAL: '' (TERMINAL) }
2_group_autogen	{LEFT_SQUARE_BRACKET: '[' (TERMINAL) }
equiv-op	{EQV: '' (TERMINAL), NEQV: '' (TERMINAL) }
68_group_autogen	{COMMA: ',' (TERMINAL) }
do-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL) }
derived-type-def	{NAME_LITERAL: 'TYPE' (TERMINAL) }
block-data-stmt	{NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'BLOCKDATA' (TERMINAL) }
16_opt_autogen	{PERCENT: '%' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
entity-decl	{NAME_LITERAL: '' (TERMINAL) }
bounds-spec-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
where-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL) }
close-spec	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NAME_LITERAL: 'STATUS' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
volatile-stmt	{NAME_LITERAL: 'VOLATILE' (TERMINAL) }
forall-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL) }
type-param-spec-list	{NAME_LITERAL: '' (TERMINAL), ASTERIK: '*' (TERMINAL), COLON: ':' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
coarray-spec	{COLON: ':' (TERMINAL), _EMTPTY_: '' (TERMINAL), ASTERIK: '*' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
if-stmt	{NAME_LITERAL: 'IF' (TERMINAL) }
submodule	{NAME_LITERAL: 'SUBMODULE' (TERMINAL) }
rewind-stmt	{NAME_LITERAL: 'REWIND' (TERMINAL) }
case-value	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
forall-step	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
action-term-do-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL) }
derived-type-spec	{NAME_LITERAL: '' (TERMINAL) }
codimension-stmt	{NAME_LITERAL: 'CODIMENSION' (TERMINAL) }
wait-stmt	{NAME_LITERAL: 'WAIT' (TERMINAL) }
named-constant-def-list	{NAME_LITERAL: '' (TERMINAL) }
component-array-spec	{COLON: ':' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
upper-bound	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
internal-subprogram	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
char-length	{LEFT_PARENTHESIS: '(' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL) }
29_opt_autogen	{_EMTPTY_: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), NAME_LITERAL: 'I' (TERMINAL), NAME_LITERAL: 'B' (TERMINAL), NAME_LITERAL: 'O' (TERMINAL), NAME_LITERAL: 'Z' (TERMINAL), NAME_LITERAL: 'F' (TERMINAL), NAME_LITERAL: 'E' (TERMINAL), NAME_LITERAL: 'EN' (TERMINAL), NAME_LITERAL: 'ES' (TERMINAL), NAME_LITERAL: 'G' (TERMINAL), NAME_LITERAL: 'L' (TERMINAL), NAME_LITERAL: 'A' (TERMINAL), NAME_LITERAL: 'D' (TERMINAL), NAME_LITERAL: 'DT' (TERMINAL), SLASH: '/' (TERMINAL), COLON: ':' (TERMINAL), COMMA: ',' (TERMINAL), NAME_LITERAL: 'T' (TERMINAL), NAME_LITERAL: 'TL' (TERMINAL), NAME_LITERAL: 'TR' (TERMINAL), NAME_LITERAL: 'SS' (TERMINAL), NAME_LITERAL: 'SP' (TERMINAL), NAME_LITERAL: 'S' (TERMINAL), NAME_LITERAL: 'BN' (TERMINAL), NAME_LITERAL: 'BZ' (TERMINAL), NAME_LITERAL: 'RU' (TERMINAL), NAME_LITERAL: 'RD' (TERMINAL), NAME_LITERAL: 'RZ' (TERMINAL), NAME_LITERAL: 'RN' (TERMINAL), NAME_LITERAL: 'RC' (TERMINAL), NAME_LITERAL: 'RP' (TERMINAL), NAME_LITERAL: 'DC' (TERMINAL), NAME_LITERAL: 'DP' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
n	{INT_LITERAL_CONSTANT: '' (TERMINAL) }
ac-value	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
allocate-coarray-spec	{_EMTPTY_: '' (TERMINAL), ASTERIK: '*' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
lower-cobound	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
6_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
position-spec	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
79_group_autogen	{COLON: ':' (TERMINAL) }
position-spec-list	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
7_group_autogen	{ASTERIK: '*' (TERMINAL) }
exit-stmt	{NAME_LITERAL: 'EXIT' (TERMINAL) }
module-subprogram-part	{NAME_LITERAL: 'CONTAINS' (TERMINAL) }
cosubscript-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
dtv-type-spec	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL) }
37_opt_autogen	{COLON: ':' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
case-value-range	{COLON: ':' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
10_group_autogen	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
32_group_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL) }
bind-stmt	{NAME_LITERAL: 'BIND' (TERMINAL) }
type-bound-procedure-part1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL) }
defined-io-generic-spec	{NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL) }
60_group_autogen	{COMMA: ',' (TERMINAL) }
connect-spec-list	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'ACCESS' (TERMINAL), NAME_LITERAL: 'ACTION' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BLANK' (TERMINAL), NAME_LITERAL: 'DECIMAL' (TERMINAL), NAME_LITERAL: 'DELIM' (TERMINAL), NAME_LITERAL: 'ENCODING' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NAME_LITERAL: 'FILE' (TERMINAL), NAME_LITERAL: 'FORM' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'NEWUNIT' (TERMINAL), NAME_LITERAL: 'PAD' (TERMINAL), NAME_LITERAL: 'POSITION' (TERMINAL), NAME_LITERAL: 'RECL' (TERMINAL), NAME_LITERAL: 'ROUND' (TERMINAL), NAME_LITERAL: 'SIGN' (TERMINAL), NAME_LITERAL: 'STATUS' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
data-pointer-object	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
designator	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
io-implied-do-control	{NAME_LITERAL: '' (TERMINAL) }
arithmetic-if-stmt	{NAME_LITERAL: 'IF' (TERMINAL) }
private-or-sequence1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'SEQUENCE' (TERMINAL) }
access-id	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'OPERATOR' (TERMINAL), NAME_LITERAL: 'ASSIGNMENT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL) }
proc-pointer-init	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
39_opt_autogen	{EQUALS: '=' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
data-i-do-object-list	{LEFT_PARENTHESIS: '(' (TERMINAL), NAME_LITERAL: '' (TERMINAL) }
11_group_autogen	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
19_opt_autogen	{COLON: ':' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
type-param-decl	{NAME_LITERAL: '' (TERMINAL) }
function-stmt	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
level-5-expr	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
equivalence-set-list	{LEFT_PARENTHESIS: '(' (TERMINAL) }
associate-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL) }
rel-op	{EQ: '' (TERMINAL), NE: '' (TERMINAL), LT: '' (TERMINAL), LE: '' (TERMINAL), GT: '' (TERMINAL), GE: '' (TERMINAL), EQUALS: '=' (TERMINAL), SLASH: '/' (TERMINAL), LESS_THAN: '<' (TERMINAL), GREATER_THAN: '>' (TERMINAL) }
bounds-remapping-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
46_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
critical-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL) }
NAME_LITERAL1_opt_autogen	{NAME_LITERAL: '' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
67_group_autogen	{COMMA: ',' (TERMINAL) }
internal-subprogram-part1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL) }
attr-spec	{NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'CONTIGUOUS' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL) }
41_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
ac-value-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
forall-assignment-stmt	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
30_group_autogen	{PERCENT: '%' (TERMINAL) }
component-attr-spec	{NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'CONTIGUOUS' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
component-initialization1_opt_autogen	{_EMTPTY_: '' (TERMINAL), EQUALS: '=' (TERMINAL) }
27_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
allocate-stmt	{NAME_LITERAL: 'ALLOCATE' (TERMINAL) }
proc-decl	{NAME_LITERAL: '' (TERMINAL) }
enumerator	{NAME_LITERAL: '' (TERMINAL) }
internal-subprogram1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
2_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
other-specification-stmt	{NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL) }
format-specification	{LEFT_PARENTHESIS: '(' (TERMINAL) }
implicit-spec	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
proc-interface	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
73_group_autogen	{DECIMALPOINT_OR_PERIOD: '.' (TERMINAL) }
subscript	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
close-spec-list	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NAME_LITERAL: 'STATUS' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
8_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
declaration-construct1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
43_group_autogen	{COMMA: ',' (TERMINAL) }
pointer-stmt	{NAME_LITERAL: 'POINTER' (TERMINAL) }
use-stmt1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL) }
71_group_autogen	{DECIMALPOINT_OR_PERIOD: '.' (TERMINAL) }
parent-identifier	{NAME_LITERAL: '' (TERMINAL) }
internal-subprogram-part2_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL) }
component-initialization	{EQUALS: '=' (TERMINAL) }
66_group_autogen	{COMMA: ',' (TERMINAL) }
actual-arg	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), ASTERIK: '*' (TERMINAL) }
position-edit-desc	{NAME_LITERAL: 'T' (TERMINAL), NAME_LITERAL: 'TL' (TERMINAL), NAME_LITERAL: 'TR' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL) }
associate-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL) }
35_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
read-stmt	{NAME_LITERAL: 'READ' (TERMINAL) }
continue-stmt	{NAME_LITERAL: 'CONTINUE' (TERMINAL) }
backspace-stmt	{NAME_LITERAL: 'BACKSPACE' (TERMINAL) }
19_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
only-list1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'OPERATOR' (TERMINAL), NAME_LITERAL: 'ASSIGNMENT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL) }
kind-selector	{LEFT_PARENTHESIS: '(' (TERMINAL) }
where-stmt	{NAME_LITERAL: 'WHERE' (TERMINAL) }
29_group_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), SLASH: '/' (TERMINAL) }
vector-subscript	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
component-decl	{NAME_LITERAL: '' (TERMINAL) }
executable-construct	{NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
38_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
signed-real-literal-constant	{PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL) }
prefix1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
61_group_autogen	{COMMA: ',' (TERMINAL) }
15_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
46_group_autogen	{COMMA: ',' (TERMINAL) }
data-stmt-value	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL) }
7_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
24_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
forall-construct-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL) }
initial-data-target	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
subroutine-subprogram	{NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
assumed-size-spec-list	{_EMTPTY_: '' (TERMINAL), ASTERIK: '*' (TERMINAL), COMMA: ',' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
stop-stmt	{NAME_LITERAL: 'STOP' (TERMINAL) }
target-decl	{NAME_LITERAL: '' (TERMINAL) }
type-attr-spec-list	{NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'EXTENDS' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
83_group_autogen	{COMMA: ',' (TERMINAL) }
length-selector	{LEFT_PARENTHESIS: '(' (TERMINAL), ASTERIK: '*' (TERMINAL), COLON: ':' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
sync-stat-list	{NAME_LITERAL: 'STAT' (TERMINAL), NAME_LITERAL: 'ERRMSG' (TERMINAL) }
45_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL), COLON: ':' (TERMINAL) }
dummy-arg-list	{NAME_LITERAL: '' (TERMINAL), ASTERIK: '*' (TERMINAL) }
23_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
5_opt_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
45_group_autogen	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
output-item	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
23_opt_autogen	{LEFT_SQUARE_BRACKET: '[' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
common-stmt	{NAME_LITERAL: 'COMMON' (TERMINAL) }
else-if-constructs	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'ELSE' (TERMINAL), NAME_LITERAL: 'ELSEIF' (TERMINAL) }
31_opt_autogen	{DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
19_group_autogen	{COMMA: ',' (TERMINAL) }
module-stmt	{NAME_LITERAL: 'MODULE' (TERMINAL) }
23_group_autogen	{COMMA: ',' (TERMINAL) }
wait-spec-list	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'EOR' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NAME_LITERAL: 'ID' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
input-item-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
35_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
end-block-data-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDBLOCK' (TERMINAL), NAME_LITERAL: 'ENDBLOCKDATA' (TERMINAL) }
wait-spec	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'EOR' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NAME_LITERAL: 'ID' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
16_group_autogen	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
69_group_autogen	{CHAR_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), NAME_LITERAL: 'I' (TERMINAL), NAME_LITERAL: 'B' (TERMINAL), NAME_LITERAL: 'O' (TERMINAL), NAME_LITERAL: 'Z' (TERMINAL), NAME_LITERAL: 'F' (TERMINAL), NAME_LITERAL: 'E' (TERMINAL), NAME_LITERAL: 'EN' (TERMINAL), NAME_LITERAL: 'ES' (TERMINAL), NAME_LITERAL: 'G' (TERMINAL), NAME_LITERAL: 'L' (TERMINAL), NAME_LITERAL: 'A' (TERMINAL), NAME_LITERAL: 'D' (TERMINAL), NAME_LITERAL: 'DT' (TERMINAL), _EMTPTY_: '' (TERMINAL), SLASH: '/' (TERMINAL), COLON: ':' (TERMINAL), COMMA: ',' (TERMINAL), NAME_LITERAL: 'T' (TERMINAL), NAME_LITERAL: 'TL' (TERMINAL), NAME_LITERAL: 'TR' (TERMINAL), NAME_LITERAL: 'SS' (TERMINAL), NAME_LITERAL: 'SP' (TERMINAL), NAME_LITERAL: 'S' (TERMINAL), NAME_LITERAL: 'BN' (TERMINAL), NAME_LITERAL: 'BZ' (TERMINAL), NAME_LITERAL: 'RU' (TERMINAL), NAME_LITERAL: 'RD' (TERMINAL), NAME_LITERAL: 'RZ' (TERMINAL), NAME_LITERAL: 'RN' (TERMINAL), NAME_LITERAL: 'RC' (TERMINAL), NAME_LITERAL: 'RP' (TERMINAL), NAME_LITERAL: 'DC' (TERMINAL), NAME_LITERAL: 'DP' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
alloc-opt-list	{NAME_LITERAL: 'ERRMSG' (TERMINAL), NAME_LITERAL: 'MOLD' (TERMINAL), NAME_LITERAL: 'SOURCE' (TERMINAL), NAME_LITERAL: 'STAT' (TERMINAL) }
49_group_autogen	{COMMA: ',' (TERMINAL) }
rename	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'OPERATOR' (TERMINAL) }
21_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
bind-entity-list	{NAME_LITERAL: '' (TERMINAL), SLASH: '/' (TERMINAL) }
defined-operator	{DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), ASTERIK: '*' (TERMINAL), SLASH: '/' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), EQ: '' (TERMINAL), NE: '' (TERMINAL), LT: '' (TERMINAL), LE: '' (TERMINAL), GT: '' (TERMINAL), GE: '' (TERMINAL), EQUALS: '=' (TERMINAL), LESS_THAN: '<' (TERMINAL), GREATER_THAN: '>' (TERMINAL), NOT: '' (TERMINAL), AND: '' (TERMINAL), OR: '' (TERMINAL), EQV: '' (TERMINAL), NEQV: '' (TERMINAL) }
equivalence-stmt	{NAME_LITERAL: 'EQUIVALENCE' (TERMINAL) }
1_opt_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
procedure-declaration-stmt	{NAME_LITERAL: 'PROCEDURE' (TERMINAL) }
main-program	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'PROGRAM' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
end-forall-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFORALL' (TERMINAL) }
implicit-spec-list	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
close-stmt	{NAME_LITERAL: 'CLOSE' (TERMINAL) }
allocate-coshape-spec-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
else-if-construct	{NAME_LITERAL: 'ELSE' (TERMINAL), NAME_LITERAL: 'ELSEIF' (TERMINAL) }
24_group_autogen	{COMMA: ',' (TERMINAL) }
declaration-construct	{NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
initial-proc-target	{NAME_LITERAL: '' (TERMINAL) }
external-stmt	{NAME_LITERAL: 'EXTERNAL' (TERMINAL) }
saved-entity	{NAME_LITERAL: '' (TERMINAL), SLASH: '/' (TERMINAL) }
only-list	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'OPERATOR' (TERMINAL), NAME_LITERAL: 'ASSIGNMENT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL) }
36_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL) }
common-block-object-list	{NAME_LITERAL: '' (TERMINAL) }
end-select-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDSELECT' (TERMINAL) }
else-construct	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'ELSE' (TERMINAL) }
and-op	{AND: '' (TERMINAL) }
deferred-coshape-spec	{COLON: ':' (TERMINAL) }
equivalence-object-list	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
21_group_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL) }
contiguous-stmt	{NAME_LITERAL: 'CONTIGUOUS' (TERMINAL) }
unlock-stmt	{NAME_LITERAL: 'UNLOCK' (TERMINAL) }
prefix	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
array-spec	{COLON: ':' (TERMINAL), _EMTPTY_: '' (TERMINAL), ASTERIK: '*' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
10_opt_autogen	{COLON: ':' (TERMINAL), _EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'OPERATOR' (TERMINAL), NAME_LITERAL: 'ASSIGNMENT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL) }
where-construct-body	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'ELSE' (TERMINAL), NAME_LITERAL: 'ELSEWHERE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
forall-body-constructs	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
component-spec-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
entry-stmt	{NAME_LITERAL: 'ENTRY' (TERMINAL) }
block-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL) }
substring-range	{_EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
case-value-range-list	{COLON: ':' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
and-operand	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
name-list1_opt_autogen	{NAME_LITERAL: '' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
loop-control	{COMMA: ',' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'WHILE' (TERMINAL), NAME_LITERAL: 'CONCURRENT' (TERMINAL) }
access-stmt	{NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
initialization	{EQUALS: '=' (TERMINAL) }
level-2-expr	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), NOT: '' (TERMINAL) }
program-unit	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'PROGRAM' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'SUBMODULE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'BLOCKDATA' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
9_group_autogen	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
masked-elsewhere-stmt-list	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'ELSE' (TERMINAL), NAME_LITERAL: 'ELSEWHERE' (TERMINAL) }
explicit-shape-spec-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
where-body-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
namelist-stmt	{NAME_LITERAL: 'NAMELIST' (TERMINAL) }
explicit-coshape-spec	{_EMTPTY_: '' (TERMINAL), ASTERIK: '*' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
inquire-spec-list	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'FILE' (TERMINAL), NAME_LITERAL: 'ACCESS' (TERMINAL), NAME_LITERAL: 'ACTION' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BLANK' (TERMINAL), NAME_LITERAL: 'DECIMAL' (TERMINAL), NAME_LITERAL: 'DELIM' (TERMINAL), NAME_LITERAL: 'DIRECT' (TERMINAL), NAME_LITERAL: 'ENCODING' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NAME_LITERAL: 'EXIST' (TERMINAL), NAME_LITERAL: 'FORM' (TERMINAL), NAME_LITERAL: 'FORMATTED' (TERMINAL), NAME_LITERAL: 'ID' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'NAME' (TERMINAL), NAME_LITERAL: 'NAMED' (TERMINAL), NAME_LITERAL: 'NEXTREC' (TERMINAL), NAME_LITERAL: 'NUMBER' (TERMINAL), NAME_LITERAL: 'OPENED' (TERMINAL), NAME_LITERAL: 'PAD' (TERMINAL), NAME_LITERAL: 'PENDING' (TERMINAL), NAME_LITERAL: 'POS' (TERMINAL), NAME_LITERAL: 'POSITION' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'READWRITE' (TERMINAL), NAME_LITERAL: 'RECL' (TERMINAL), NAME_LITERAL: 'ROUND' (TERMINAL), NAME_LITERAL: 'SEQUENTIAL' (TERMINAL), NAME_LITERAL: 'SIGN' (TERMINAL), NAME_LITERAL: 'SIZE' (TERMINAL), NAME_LITERAL: 'STREAM' (TERMINAL), NAME_LITERAL: 'UNFORMATTED' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
intrinsic-type-spec	{NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
mult-operand	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
separate-module-subprogram	{NAME_LITERAL: 'MODULE' (TERMINAL) }
41_group_autogen	{COMMA: ',' (TERMINAL) }
40_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
implicit-part-stmt1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL) }
w	{INT_LITERAL_CONSTANT: '' (TERMINAL) }
nonlabel-do-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL) }
mult-op	{ASTERIK: '*' (TERMINAL), SLASH: '/' (TERMINAL) }
io-implied-do	{LEFT_PARENTHESIS: '(' (TERMINAL) }
47_group_autogen	{COMMA: ',' (TERMINAL) }
assumed-size-spec	{_EMTPTY_: '' (TERMINAL), ASTERIK: '*' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
association	{NAME_LITERAL: '' (TERMINAL) }
asynchronous-stmt	{NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL) }
type-bound-proc-decl	{NAME_LITERAL: '' (TERMINAL) }
array-element	{NAME_LITERAL: '' (TERMINAL) }
11_opt_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
module-nature	{NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NON' (TERMINAL) }
6_opt_autogen	{LEFT_SQUARE_BRACKET: '[' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
saved-entity-list	{NAME_LITERAL: '' (TERMINAL), SLASH: '/' (TERMINAL) }
blank-interp-edit-desc	{NAME_LITERAL: 'BN' (TERMINAL), NAME_LITERAL: 'BZ' (TERMINAL) }
target-stmt	{NAME_LITERAL: 'TARGET' (TERMINAL) }
end-enum-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDENUM' (TERMINAL) }
constant	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
38_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL) }
module-subprogram-part2_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL) }
level-3-expr	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), NOT: '' (TERMINAL) }
program-stmt	{NAME_LITERAL: 'PROGRAM' (TERMINAL) }
e	{INT_LITERAL_CONSTANT: '' (TERMINAL) }
28_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'CASE' (TERMINAL) }
4_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
expr1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
allocate-coshape-spec	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
component-part1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
generic-spec	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'OPERATOR' (TERMINAL), NAME_LITERAL: 'ASSIGNMENT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL) }
format-items	{CHAR_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), NAME_LITERAL: 'I' (TERMINAL), NAME_LITERAL: 'B' (TERMINAL), NAME_LITERAL: 'O' (TERMINAL), NAME_LITERAL: 'Z' (TERMINAL), NAME_LITERAL: 'F' (TERMINAL), NAME_LITERAL: 'E' (TERMINAL), NAME_LITERAL: 'EN' (TERMINAL), NAME_LITERAL: 'ES' (TERMINAL), NAME_LITERAL: 'G' (TERMINAL), NAME_LITERAL: 'L' (TERMINAL), NAME_LITERAL: 'A' (TERMINAL), NAME_LITERAL: 'D' (TERMINAL), NAME_LITERAL: 'DT' (TERMINAL), _EMTPTY_: '' (TERMINAL), SLASH: '/' (TERMINAL), COLON: ':' (TERMINAL), COMMA: ',' (TERMINAL), NAME_LITERAL: 'T' (TERMINAL), NAME_LITERAL: 'TL' (TERMINAL), NAME_LITERAL: 'TR' (TERMINAL), NAME_LITERAL: 'SS' (TERMINAL), NAME_LITERAL: 'SP' (TERMINAL), NAME_LITERAL: 'S' (TERMINAL), NAME_LITERAL: 'BN' (TERMINAL), NAME_LITERAL: 'BZ' (TERMINAL), NAME_LITERAL: 'RU' (TERMINAL), NAME_LITERAL: 'RD' (TERMINAL), NAME_LITERAL: 'RZ' (TERMINAL), NAME_LITERAL: 'RN' (TERMINAL), NAME_LITERAL: 'RC' (TERMINAL), NAME_LITERAL: 'RP' (TERMINAL), NAME_LITERAL: 'DC' (TERMINAL), NAME_LITERAL: 'DP' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
access-spec	{NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
deferred-shape-spec	{COLON: ':' (TERMINAL) }
write-stmt	{NAME_LITERAL: 'WRITE' (TERMINAL) }
sufix	{NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'RESULT' (TERMINAL) }
50_group_autogen	{COMMA: ',' (TERMINAL) }
proc-component-def-stmt	{NAME_LITERAL: 'PROCEDURE' (TERMINAL) }
implicit-part1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL) }
data-stmt-value-list	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL) }
execution-part	{NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
initialization1_opt_autogen	{_EMTPTY_: '' (TERMINAL), EQUALS: '=' (TERMINAL) }
io-control-spec-list	{NAME_LITERAL: 'UNIT' (TERMINAL), ASTERIK: '*' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'FMT' (TERMINAL), NAME_LITERAL: 'NML' (TERMINAL), NAME_LITERAL: 'ADVANCE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BLANK' (TERMINAL), NAME_LITERAL: 'DECIMAL' (TERMINAL), NAME_LITERAL: 'DELIM' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'EOR' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NAME_LITERAL: 'ID' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'PAD' (TERMINAL), NAME_LITERAL: 'POS' (TERMINAL), NAME_LITERAL: 'REC' (TERMINAL), NAME_LITERAL: 'ROUND' (TERMINAL), NAME_LITERAL: 'SIGN' (TERMINAL), NAME_LITERAL: 'SIZE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
critical-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL) }
data-target	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
33_group_autogen	{COMMA: ',' (TERMINAL) }
55_group_autogen	{COMMA: ',' (TERMINAL) }
unlimited-format-item	{ASTERIK: '*' (TERMINAL) }
null-init	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
end-do-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDDO' (TERMINAL) }
end-interface-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDINTERFACE' (TERMINAL) }
inner-shared-do-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL) }
interface-body	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL) }
import-stmt	{NAME_LITERAL: 'IMPORT' (TERMINAL) }
where-body-construct-list	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
nullify-stmt	{NAME_LITERAL: 'NULLIFY' (TERMINAL) }
name-list	{NAME_LITERAL: '' (TERMINAL) }
forall-header	{LEFT_PARENTHESIS: '(' (TERMINAL) }
where-construct-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL) }
40_group_autogen	{LEFT_SQUARE_BRACKET: '[' (TERMINAL) }
component-def-stmt	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
3_opt_autogen	{ASTERIK: '*' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
label-list	{INT_LITERAL_CONSTANT: '' (TERMINAL) }
inquire-spec	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'FILE' (TERMINAL), NAME_LITERAL: 'ACCESS' (TERMINAL), NAME_LITERAL: 'ACTION' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BLANK' (TERMINAL), NAME_LITERAL: 'DECIMAL' (TERMINAL), NAME_LITERAL: 'DELIM' (TERMINAL), NAME_LITERAL: 'DIRECT' (TERMINAL), NAME_LITERAL: 'ENCODING' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NAME_LITERAL: 'EXIST' (TERMINAL), NAME_LITERAL: 'FORM' (TERMINAL), NAME_LITERAL: 'FORMATTED' (TERMINAL), NAME_LITERAL: 'ID' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'NAME' (TERMINAL), NAME_LITERAL: 'NAMED' (TERMINAL), NAME_LITERAL: 'NEXTREC' (TERMINAL), NAME_LITERAL: 'NUMBER' (TERMINAL), NAME_LITERAL: 'OPENED' (TERMINAL), NAME_LITERAL: 'PAD' (TERMINAL), NAME_LITERAL: 'PENDING' (TERMINAL), NAME_LITERAL: 'POS' (TERMINAL), NAME_LITERAL: 'POSITION' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'READWRITE' (TERMINAL), NAME_LITERAL: 'RECL' (TERMINAL), NAME_LITERAL: 'ROUND' (TERMINAL), NAME_LITERAL: 'SEQUENTIAL' (TERMINAL), NAME_LITERAL: 'SIGN' (TERMINAL), NAME_LITERAL: 'SIZE' (TERMINAL), NAME_LITERAL: 'STREAM' (TERMINAL), NAME_LITERAL: 'UNFORMATTED' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
11_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
interface-specification1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL) }
25_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
expr2_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
v	{INT_LITERAL_CONSTANT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
round-edit-desc	{NAME_LITERAL: 'RU' (TERMINAL), NAME_LITERAL: 'RD' (TERMINAL), NAME_LITERAL: 'RZ' (TERMINAL), NAME_LITERAL: 'RN' (TERMINAL), NAME_LITERAL: 'RC' (TERMINAL), NAME_LITERAL: 'RP' (TERMINAL) }
lower-bound	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
endfile-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL) }
explicit-shape-spec	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
rename-list	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'OPERATOR' (TERMINAL) }
else-if-stmt	{NAME_LITERAL: 'ELSE' (TERMINAL), NAME_LITERAL: 'ELSEIF' (TERMINAL) }
implicit-stmt	{NAME_LITERAL: 'IMPLICIT' (TERMINAL) }
type-bound-proc-binding	{NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'GENERIC' (TERMINAL), NAME_LITERAL: 'FINAL' (TERMINAL) }
34_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
ac-implied-do-control	{NAME_LITERAL: '' (TERMINAL) }
35_group_autogen	{COMMA: ',' (TERMINAL) }
signed-int-literal-constant	{INT_LITERAL_CONSTANT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
24_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
d	{INT_LITERAL_CONSTANT: '' (TERMINAL) }
27_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
optional-stmt	{NAME_LITERAL: 'OPTIONAL' (TERMINAL) }
18_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
36_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
59_group_autogen	{COMMA: ',' (TERMINAL) }
58_group_autogen	{COMMA: ',' (TERMINAL) }
33_opt_autogen	{DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
allocatable-decl-list	{NAME_LITERAL: '' (TERMINAL) }
stop-code	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
io-implied-do-object-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
execution-part-construct	{NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
program	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'PROGRAM' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'SUBMODULE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'BLOCKDATA' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
end-do	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDDO' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL) }
implicit-part-stmt	{NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL) }
private-components-stmt	{NAME_LITERAL: 'PRIVATE' (TERMINAL) }
80_group_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL) }
outer-shared-do-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL) }
4_group_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL) }
type-bound-procedure-stmt	{NAME_LITERAL: 'PROCEDURE' (TERMINAL) }
private-or-sequence	{NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'SEQUENCE' (TERMINAL) }
module-subprogram1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
type-bound-procedure-part	{NAME_LITERAL: 'CONTAINS' (TERMINAL) }
equivalence-set	{LEFT_PARENTHESIS: '(' (TERMINAL) }
case-stmt	{NAME_LITERAL: 'CASE' (TERMINAL) }
forall-stmt	{NAME_LITERAL: 'FORALL' (TERMINAL) }
call-stmt	{NAME_LITERAL: 'CALL' (TERMINAL) }
value-stmt	{NAME_LITERAL: 'VALUE' (TERMINAL) }
format-items1_opt_autogen	{_EMTPTY_: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), NAME_LITERAL: 'I' (TERMINAL), NAME_LITERAL: 'B' (TERMINAL), NAME_LITERAL: 'O' (TERMINAL), NAME_LITERAL: 'Z' (TERMINAL), NAME_LITERAL: 'F' (TERMINAL), NAME_LITERAL: 'E' (TERMINAL), NAME_LITERAL: 'EN' (TERMINAL), NAME_LITERAL: 'ES' (TERMINAL), NAME_LITERAL: 'G' (TERMINAL), NAME_LITERAL: 'L' (TERMINAL), NAME_LITERAL: 'A' (TERMINAL), NAME_LITERAL: 'D' (TERMINAL), NAME_LITERAL: 'DT' (TERMINAL), SLASH: '/' (TERMINAL), COLON: ':' (TERMINAL), COMMA: ',' (TERMINAL), NAME_LITERAL: 'T' (TERMINAL), NAME_LITERAL: 'TL' (TERMINAL), NAME_LITERAL: 'TR' (TERMINAL), NAME_LITERAL: 'SS' (TERMINAL), NAME_LITERAL: 'SP' (TERMINAL), NAME_LITERAL: 'S' (TERMINAL), NAME_LITERAL: 'BN' (TERMINAL), NAME_LITERAL: 'BZ' (TERMINAL), NAME_LITERAL: 'RU' (TERMINAL), NAME_LITERAL: 'RD' (TERMINAL), NAME_LITERAL: 'RZ' (TERMINAL), NAME_LITERAL: 'RN' (TERMINAL), NAME_LITERAL: 'RC' (TERMINAL), NAME_LITERAL: 'RP' (TERMINAL), NAME_LITERAL: 'DC' (TERMINAL), NAME_LITERAL: 'DP' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
internal-subprogram-part3_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL) }
48_group_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL) }
39_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
binding-attr-list	{NAME_LITERAL: 'PASS' (TERMINAL), NAME_LITERAL: 'NOPASS' (TERMINAL), NAME_LITERAL: 'NON' (TERMINAL), NAME_LITERAL: 'DEFERRED' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
execution-part3_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
m	{INT_LITERAL_CONSTANT: '' (TERMINAL) }
prefix-spec1_list_autogen	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
subroutine-body	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
case-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL) }
34_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL) }
format-item	{CHAR_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), NAME_LITERAL: 'I' (TERMINAL), NAME_LITERAL: 'B' (TERMINAL), NAME_LITERAL: 'O' (TERMINAL), NAME_LITERAL: 'Z' (TERMINAL), NAME_LITERAL: 'F' (TERMINAL), NAME_LITERAL: 'E' (TERMINAL), NAME_LITERAL: 'EN' (TERMINAL), NAME_LITERAL: 'ES' (TERMINAL), NAME_LITERAL: 'G' (TERMINAL), NAME_LITERAL: 'L' (TERMINAL), NAME_LITERAL: 'A' (TERMINAL), NAME_LITERAL: 'D' (TERMINAL), NAME_LITERAL: 'DT' (TERMINAL), _EMTPTY_: '' (TERMINAL), SLASH: '/' (TERMINAL), COLON: ':' (TERMINAL), NAME_LITERAL: 'T' (TERMINAL), NAME_LITERAL: 'TL' (TERMINAL), NAME_LITERAL: 'TR' (TERMINAL), NAME_LITERAL: 'SS' (TERMINAL), NAME_LITERAL: 'SP' (TERMINAL), NAME_LITERAL: 'S' (TERMINAL), NAME_LITERAL: 'BN' (TERMINAL), NAME_LITERAL: 'BZ' (TERMINAL), NAME_LITERAL: 'RU' (TERMINAL), NAME_LITERAL: 'RD' (TERMINAL), NAME_LITERAL: 'RZ' (TERMINAL), NAME_LITERAL: 'RN' (TERMINAL), NAME_LITERAL: 'RC' (TERMINAL), NAME_LITERAL: 'RP' (TERMINAL), NAME_LITERAL: 'DC' (TERMINAL), NAME_LITERAL: 'DP' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
procedure-designator	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
type-param-inquiry	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
6_group_autogen	{LEFT_SQUARE_BRACKET: '[' (TERMINAL) }
add-operand	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
3_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
alt-return-spec	{ASTERIK: '*' (TERMINAL) }
file-unit-number	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
pointer-decl-list	{NAME_LITERAL: '' (TERMINAL) }
complex-literal-constant	{LEFT_PARENTHESIS: '(' (TERMINAL) }
data-component-def-stmt	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
ac-spec	{NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
end-subroutine-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL) }
binding-private-stmt1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
32_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
30_opt_autogen	{DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
allocation-list	{NAME_LITERAL: '' (TERMINAL) }
14_opt_autogen	{LEFT_SQUARE_BRACKET: '[' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL), COLON: ':' (TERMINAL) }
literal-constant	{INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
io-control-spec	{NAME_LITERAL: 'UNIT' (TERMINAL), ASTERIK: '*' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'FMT' (TERMINAL), NAME_LITERAL: 'NML' (TERMINAL), NAME_LITERAL: 'ADVANCE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BLANK' (TERMINAL), NAME_LITERAL: 'DECIMAL' (TERMINAL), NAME_LITERAL: 'DELIM' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'EOR' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NAME_LITERAL: 'ID' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'PAD' (TERMINAL), NAME_LITERAL: 'POS' (TERMINAL), NAME_LITERAL: 'REC' (TERMINAL), NAME_LITERAL: 'ROUND' (TERMINAL), NAME_LITERAL: 'SIGN' (TERMINAL), NAME_LITERAL: 'SIZE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
section-subscript-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), _EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL), COMMA: ',' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
do-body	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
8_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
forall-limit	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
defined-op	{DECIMALPOINT_OR_PERIOD: '.' (TERMINAL) }
intrinsic-operator	{ASTERIK: '*' (TERMINAL), SLASH: '/' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), EQ: '' (TERMINAL), NE: '' (TERMINAL), LT: '' (TERMINAL), LE: '' (TERMINAL), GT: '' (TERMINAL), GE: '' (TERMINAL), EQUALS: '=' (TERMINAL), LESS_THAN: '<' (TERMINAL), GREATER_THAN: '>' (TERMINAL), NOT: '' (TERMINAL), AND: '' (TERMINAL), OR: '' (TERMINAL), EQV: '' (TERMINAL), NEQV: '' (TERMINAL) }
primary	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL) }
75_group_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL) }
data-stmt-set	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
implied-shape-spec	{ASTERIK: '*' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
entity-decl-list	{NAME_LITERAL: '' (TERMINAL) }
forall-triplet-spec-list	{NAME_LITERAL: '' (TERMINAL) }
image-selector	{LEFT_SQUARE_BRACKET: '[' (TERMINAL) }
actual-arg-spec-list1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), ASTERIK: '*' (TERMINAL) }
connect-spec	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'ACCESS' (TERMINAL), NAME_LITERAL: 'ACTION' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BLANK' (TERMINAL), NAME_LITERAL: 'DECIMAL' (TERMINAL), NAME_LITERAL: 'DELIM' (TERMINAL), NAME_LITERAL: 'ENCODING' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NAME_LITERAL: 'FILE' (TERMINAL), NAME_LITERAL: 'FORM' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'NEWUNIT' (TERMINAL), NAME_LITERAL: 'PAD' (TERMINAL), NAME_LITERAL: 'POSITION' (TERMINAL), NAME_LITERAL: 'RECL' (TERMINAL), NAME_LITERAL: 'ROUND' (TERMINAL), NAME_LITERAL: 'SIGN' (TERMINAL), NAME_LITERAL: 'STATUS' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
or-op	{OR: '' (TERMINAL) }
case-selector	{LEFT_PARENTHESIS: '(' (TERMINAL), NAME_LITERAL: 'DEFAULT' (TERMINAL) }
procedure-stmt	{NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL) }
expr	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
13_opt_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
type-param-spec	{NAME_LITERAL: '' (TERMINAL), ASTERIK: '*' (TERMINAL), COLON: ':' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
data-edit-desc	{NAME_LITERAL: 'I' (TERMINAL), NAME_LITERAL: 'B' (TERMINAL), NAME_LITERAL: 'O' (TERMINAL), NAME_LITERAL: 'Z' (TERMINAL), NAME_LITERAL: 'F' (TERMINAL), NAME_LITERAL: 'E' (TERMINAL), NAME_LITERAL: 'EN' (TERMINAL), NAME_LITERAL: 'ES' (TERMINAL), NAME_LITERAL: 'G' (TERMINAL), NAME_LITERAL: 'L' (TERMINAL), NAME_LITERAL: 'A' (TERMINAL), NAME_LITERAL: 'D' (TERMINAL), NAME_LITERAL: 'DT' (TERMINAL) }
constant-subobject	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
mp-subprogram-stmt	{NAME_LITERAL: 'MODULE' (TERMINAL) }
21_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
coindexed-named-object	{NAME_LITERAL: '' (TERMINAL) }
34_group_autogen	{COLON: ':' (TERMINAL) }
44_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
forall-body-construct	{NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
contains-stmt	{NAME_LITERAL: 'CONTAINS' (TERMINAL) }
38_group_autogen	{COMMA: ',' (TERMINAL) }
allocate-shape-spec	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
imag-part	{INT_LITERAL_CONSTANT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL) }
43_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), NAME_LITERAL: 'I' (TERMINAL), NAME_LITERAL: 'B' (TERMINAL), NAME_LITERAL: 'O' (TERMINAL), NAME_LITERAL: 'Z' (TERMINAL), NAME_LITERAL: 'F' (TERMINAL), NAME_LITERAL: 'E' (TERMINAL), NAME_LITERAL: 'EN' (TERMINAL), NAME_LITERAL: 'ES' (TERMINAL), NAME_LITERAL: 'G' (TERMINAL), NAME_LITERAL: 'L' (TERMINAL), NAME_LITERAL: 'A' (TERMINAL), NAME_LITERAL: 'D' (TERMINAL), NAME_LITERAL: 'DT' (TERMINAL), SLASH: '/' (TERMINAL), COLON: ':' (TERMINAL), NAME_LITERAL: 'T' (TERMINAL), NAME_LITERAL: 'TL' (TERMINAL), NAME_LITERAL: 'TR' (TERMINAL), NAME_LITERAL: 'SS' (TERMINAL), NAME_LITERAL: 'SP' (TERMINAL), NAME_LITERAL: 'S' (TERMINAL), NAME_LITERAL: 'BN' (TERMINAL), NAME_LITERAL: 'BZ' (TERMINAL), NAME_LITERAL: 'RU' (TERMINAL), NAME_LITERAL: 'RD' (TERMINAL), NAME_LITERAL: 'RZ' (TERMINAL), NAME_LITERAL: 'RN' (TERMINAL), NAME_LITERAL: 'RC' (TERMINAL), NAME_LITERAL: 'RP' (TERMINAL), NAME_LITERAL: 'DC' (TERMINAL), NAME_LITERAL: 'DP' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
13_group_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL) }
proc-attr-spec	{NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL) }
26_group_autogen	{COMMA: ',' (TERMINAL) }
type-spec	{NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: '' (TERMINAL) }
do-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL) }
masked-elsewhere-stmt	{NAME_LITERAL: 'ELSE' (TERMINAL), NAME_LITERAL: 'ELSEWHERE' (TERMINAL) }
data-ref	{NAME_LITERAL: '' (TERMINAL) }
9_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
codimension-decl	{NAME_LITERAL: '' (TERMINAL) }
36_group_autogen	{NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: '' (TERMINAL) }
flush-stmt	{NAME_LITERAL: 'FLUSH' (TERMINAL) }
parent-string	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
upper-cobound	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
subscript2_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
70_group_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), NAME_LITERAL: 'I' (TERMINAL), NAME_LITERAL: 'B' (TERMINAL), NAME_LITERAL: 'O' (TERMINAL), NAME_LITERAL: 'Z' (TERMINAL), NAME_LITERAL: 'F' (TERMINAL), NAME_LITERAL: 'E' (TERMINAL), NAME_LITERAL: 'EN' (TERMINAL), NAME_LITERAL: 'ES' (TERMINAL), NAME_LITERAL: 'G' (TERMINAL), NAME_LITERAL: 'L' (TERMINAL), NAME_LITERAL: 'A' (TERMINAL), NAME_LITERAL: 'D' (TERMINAL), NAME_LITERAL: 'DT' (TERMINAL), SLASH: '/' (TERMINAL), COLON: ':' (TERMINAL), NAME_LITERAL: 'T' (TERMINAL), NAME_LITERAL: 'TL' (TERMINAL), NAME_LITERAL: 'TR' (TERMINAL), NAME_LITERAL: 'SS' (TERMINAL), NAME_LITERAL: 'SP' (TERMINAL), NAME_LITERAL: 'S' (TERMINAL), NAME_LITERAL: 'BN' (TERMINAL), NAME_LITERAL: 'BZ' (TERMINAL), NAME_LITERAL: 'RU' (TERMINAL), NAME_LITERAL: 'RD' (TERMINAL), NAME_LITERAL: 'RZ' (TERMINAL), NAME_LITERAL: 'RN' (TERMINAL), NAME_LITERAL: 'RC' (TERMINAL), NAME_LITERAL: 'RP' (TERMINAL), NAME_LITERAL: 'DC' (TERMINAL), NAME_LITERAL: 'DP' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
if-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL) }
function-reference	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
end-mp-subprogram-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL) }
type-bound-generic-stmt	{NAME_LITERAL: 'GENERIC' (TERMINAL) }
ac-implied-do	{LEFT_PARENTHESIS: '(' (TERMINAL) }
22_group_autogen	{LEFT_SQUARE_BRACKET: '[' (TERMINAL) }
12_opt_autogen	{LEFT_SQUARE_BRACKET: '[' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
26_opt_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
save-stmt	{NAME_LITERAL: 'SAVE' (TERMINAL) }
allocatable-stmt	{NAME_LITERAL: 'ALLOCATABLE' (TERMINAL) }
31_group_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL) }
56_group_autogen	{COMMA: ',' (TERMINAL) }
structure-component	{NAME_LITERAL: '' (TERMINAL) }
program-unit1_list_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'PROGRAM' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'SUBMODULE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'BLOCKDATA' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
end-submodule-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDSUBMODULE' (TERMINAL) }
end-critical-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDCRITICAL' (TERMINAL) }
pointer-assignment-stmt	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
end-block-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDBLOCK' (TERMINAL) }
decimal-edit-desc	{NAME_LITERAL: 'DC' (TERMINAL), NAME_LITERAL: 'DP' (TERMINAL) }
dealloc-opt-list	{NAME_LITERAL: 'STAT' (TERMINAL), NAME_LITERAL: 'ERRMSG' (TERMINAL) }
letter-spec-list	{NAME_LITERAL: '' (TERMINAL) }
','2_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
enumerator-def-stmt1_list_autogen	{NAME_LITERAL: 'ENUMERATOR' (TERMINAL) }
3_group_autogen	{ASTERIK: '*' (TERMINAL) }
end-where-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDWHERE' (TERMINAL) }
end-select-type-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDSELECT' (TERMINAL) }
lock-stmt	{NAME_LITERAL: 'LOCK' (TERMINAL) }
12_group_autogen	{COLON: ':' (TERMINAL), _EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'OPERATOR' (TERMINAL), NAME_LITERAL: 'ASSIGNMENT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL) }
actual-arg-spec-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), ASTERIK: '*' (TERMINAL) }
only	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'OPERATOR' (TERMINAL), NAME_LITERAL: 'ASSIGNMENT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL) }
module-subprogram-part1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL) }
pointer-decl	{NAME_LITERAL: '' (TERMINAL) }
sequence-stmt	{NAME_LITERAL: 'SEQUENCE' (TERMINAL) }
select-type-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL) }
interface-specification	{NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), _EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL) }
14_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
program-stmt1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'PROGRAM' (TERMINAL) }
elsewhere-stmt-list	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'ELSE' (TERMINAL), NAME_LITERAL: 'ELSEWHERE' (TERMINAL) }
53_group_autogen	{COMMA: ',' (TERMINAL) }
72_group_autogen	{DECIMALPOINT_OR_PERIOD: '.' (TERMINAL) }
dimension-stmt	{NAME_LITERAL: 'DIMENSION' (TERMINAL) }
execution-part-construct2_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
not-op	{NOT: '' (TERMINAL) }
64_group_autogen	{COMMA: ',' (TERMINAL) }
implicit-part	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL) }
7_opt_autogen	{ASTERIK: '*' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
equiv-operand	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
28_group_autogen	{SLASH: '/' (TERMINAL) }
data-i-do-object	{LEFT_PARENTHESIS: '(' (TERMINAL), NAME_LITERAL: '' (TERMINAL) }
block-data	{NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'BLOCKDATA' (TERMINAL) }
assignment-stmt	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
open-stmt	{NAME_LITERAL: 'OPEN' (TERMINAL) }
5_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
end-program-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL) }
execution-part1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
57_group_autogen	{COMMA: ',' (TERMINAL) }
execution-part-construct1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
sufix1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'RESULT' (TERMINAL) }
type-bound-proc-binding1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'GENERIC' (TERMINAL), NAME_LITERAL: 'FINAL' (TERMINAL) }
letter-spec	{NAME_LITERAL: '' (TERMINAL) }
sync-all-stmt	{NAME_LITERAL: 'SYNC' (TERMINAL) }
16_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL), SLASH: '/' (TERMINAL) }
k	{INT_LITERAL_CONSTANT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
enumerator-def-stmt	{NAME_LITERAL: 'ENUMERATOR' (TERMINAL) }
format-stmt	{NAME_LITERAL: 'FORMAT' (TERMINAL) }
17_group_autogen	{COMMA: ',' (TERMINAL) }
codimension-decl-list	{NAME_LITERAL: '' (TERMINAL) }
33_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
4_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL) }
20_group_autogen	{COMMA: ',' (TERMINAL) }
allocate-shape-spec-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
deferred-shape-spec-list	{COLON: ':' (TERMINAL) }
78_group_autogen	{COMMA: ',' (TERMINAL) }
42_group_autogen	{COMMA: ',' (TERMINAL) }
data-stmt	{NAME_LITERAL: 'DATA' (TERMINAL) }
scalar-structure-component	{NAME_LITERAL: '' (TERMINAL) }
18_opt_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
deallocate-stmt	{NAME_LITERAL: 'DEALLOCATE' (TERMINAL) }
specification-part	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
computed-goto-stmt	{NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL) }
14_group_autogen	{LEFT_SQUARE_BRACKET: '[' (TERMINAL) }
77_group_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL) }
assumed-shape-spec-list	{COLON: ':' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
proc-pointer-object	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
cosubscript	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
flush-spec-list	{NAME_LITERAL: 'UNIT' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'IOSTAT' (TERMINAL), NAME_LITERAL: 'IOMSG' (TERMINAL), NAME_LITERAL: 'ERR' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
equivalence-object	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
28_opt_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
only-use-name	{NAME_LITERAL: '' (TERMINAL) }
declaration-type-spec	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
allocate-object-list	{NAME_LITERAL: '' (TERMINAL) }
block-do-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL) }
54_group_autogen	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL) }
complex-part-designator	{NAME_LITERAL: '' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL) }
stride	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
do-term-shared-stmt	{NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
end-module-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDMODULE' (TERMINAL) }
sign	{PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
structure-constructor	{NAME_LITERAL: '' (TERMINAL) }
binding-attr	{NAME_LITERAL: 'PASS' (TERMINAL), NAME_LITERAL: 'NOPASS' (TERMINAL), NAME_LITERAL: 'NON' (TERMINAL), NAME_LITERAL: 'DEFERRED' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
prefix-spec	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
type-param-value	{ASTERIK: '*' (TERMINAL), COLON: ':' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
type-param-decl-list	{NAME_LITERAL: '' (TERMINAL) }
subroutine-stmt	{NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
format	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), ASTERIK: '*' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
76_group_autogen	{COMMA: ',' (TERMINAL) }
proc-component-attr-spec-list	{NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PASS' (TERMINAL), NAME_LITERAL: 'NOPASS' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
type-attr-spec	{NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'EXTENDS' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
intent-spec	{NAME_LITERAL: 'IN' (TERMINAL), NAME_LITERAL: 'OUT' (TERMINAL), NAME_LITERAL: 'INOUT' (TERMINAL) }
select-case-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL) }
forall-triplet-spec	{NAME_LITERAL: '' (TERMINAL) }
sign-edit-desc	{NAME_LITERAL: 'SS' (TERMINAL), NAME_LITERAL: 'SP' (TERMINAL), NAME_LITERAL: 'S' (TERMINAL) }
13_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL), SLASH: '/' (TERMINAL) }
select-type-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL) }
protected-stmt	{NAME_LITERAL: 'PROTECTED' (TERMINAL) }
32_opt_autogen	{DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
17_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
target-decl-list	{NAME_LITERAL: '' (TERMINAL) }
input-item	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
assumed-shape-spec	{COLON: ':' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
use-stmt	{NAME_LITERAL: 'USE' (TERMINAL) }
section-subscript	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), _EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
17_opt_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
data-stmt-object	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
end-function-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL) }
proc-component-ref	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
25_group_autogen	{COMMA: ',' (TERMINAL), _EMTPTY_: '' (TERMINAL), SLASH: '/' (TERMINAL) }
pointer-object	{NAME_LITERAL: '' (TERMINAL) }
array-constructor	{LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL) }
elsewhere-stmt	{NAME_LITERAL: 'ELSE' (TERMINAL), NAME_LITERAL: 'ELSEWHERE' (TERMINAL) }
42_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
io-unit	{ASTERIK: '*' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
or-operand	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
proc-component-attr-spec	{NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PASS' (TERMINAL), NAME_LITERAL: 'NOPASS' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
print-stmt	{NAME_LITERAL: 'PRINT' (TERMINAL) }
8_group_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
submodule-stmt	{NAME_LITERAL: 'SUBMODULE' (TERMINAL) }
18_group_autogen	{COMMA: ',' (TERMINAL) }
component-data-source	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
15_opt_autogen	{SLASH: '/' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
cycle-stmt	{NAME_LITERAL: 'CYCLE' (TERMINAL) }
allocate-object	{NAME_LITERAL: '' (TERMINAL) }
interface-stmt	{NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL) }
22_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
import-stmt1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL) }
part-ref	{NAME_LITERAL: '' (TERMINAL) }
sync-images-stmt	{NAME_LITERAL: 'SYNC' (TERMINAL) }
proc-interface1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
block-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL) }
10_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
goto-stmt	{NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL) }
component-decl-list	{NAME_LITERAL: '' (TERMINAL) }
44_group_autogen	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
component-attr-spec-list	{NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'CONTIGUOUS' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL) }
subscript1_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
intent-stmt	{NAME_LITERAL: 'INTENT' (TERMINAL) }
allocatable-decl	{NAME_LITERAL: '' (TERMINAL) }
interface-block	{NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL) }
action-stmt	{NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
block	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
component-spec	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
implied-shape-spec-list	{ASTERIK: '*' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
81_group_autogen	{NAME_LITERAL: 'IN' (TERMINAL), NAME_LITERAL: 'OUT' (TERMINAL), NAME_LITERAL: 'INOUT' (TERMINAL) }
deferred-coshape-spec-list	{COLON: ':' (TERMINAL) }
internal-subprogram-part	{NAME_LITERAL: 'CONTAINS' (TERMINAL) }
derived-type-stmt	{NAME_LITERAL: 'TYPE' (TERMINAL) }
51_group_autogen	{COMMA: ',' (TERMINAL) }
data-stmt-object-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
component-part	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
output-item-list	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
dealloc-opt	{NAME_LITERAL: 'STAT' (TERMINAL), NAME_LITERAL: 'ERRMSG' (TERMINAL) }
NAME_LITERAL2_opt_autogen	{NAME_LITERAL: '' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
2_opt_autogen	{LEFT_SQUARE_BRACKET: '[' (TERMINAL), _EMTPTY_: '' (TERMINAL) }
end-if-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDIF' (TERMINAL) }
37_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
sync-memory-stmt	{NAME_LITERAL: 'SYNC' (TERMINAL) }
label-do-stmt	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL) }
execution-part2_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
inquire-stmt	{NAME_LITERAL: 'INQUIRE' (TERMINAL) }
65_group_autogen	{COMMA: ',' (TERMINAL) }
37_group_autogen	{COMMA: ',' (TERMINAL) }
15_group_autogen	{COMMA: ',' (TERMINAL) }
end-associate-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDASSOCIATE' (TERMINAL) }
20_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
62_group_autogen	{COMMA: ',' (TERMINAL) }
add-op	{PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
end-type-stmt	{NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDTYPE' (TERMINAL) }
module	{NAME_LITERAL: 'MODULE' (TERMINAL) }
30_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL) }
language-binding-spec	{NAME_LITERAL: 'BIND' (TERMINAL) }
enumerator-list	{NAME_LITERAL: '' (TERMINAL) }
26_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
enum-def-stmt	{NAME_LITERAL: 'ENUM' (TERMINAL) }
allocation	{NAME_LITERAL: '' (TERMINAL) }
lock-stat	{NAME_LITERAL: 'ACQUIRED' (TERMINAL), NAME_LITERAL: 'STAT' (TERMINAL), NAME_LITERAL: 'ERRMSG' (TERMINAL) }
type-guard-stmt	{NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL) }
bounds-remapping	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
5_group_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL) }
stmt-function-stmt	{NAME_LITERAL: '' (TERMINAL) }
subscript-triplet	{_EMTPTY_: '' (TERMINAL), COLON: ':' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
type-bound-proc-decl-list	{NAME_LITERAL: '' (TERMINAL) }
char-selector	{LEFT_PARENTHESIS: '(' (TERMINAL), ASTERIK: '*' (TERMINAL), COLON: ':' (TERMINAL), NAME_LITERAL: '' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
external-subprogram	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
alloc-opt	{NAME_LITERAL: 'ERRMSG' (TERMINAL), NAME_LITERAL: 'MOLD' (TERMINAL), NAME_LITERAL: 'SOURCE' (TERMINAL), NAME_LITERAL: 'STAT' (TERMINAL) }
level-1-expr	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL) }
concat-op	{SLASH: '/' (TERMINAL) }
39_group_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL) }
module-subprogram	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FUNCTION' (TERMINAL), NAME_LITERAL: 'USE' (TERMINAL), NAME_LITERAL: 'IMPORT' (TERMINAL), NAME_LITERAL: 'CONTAINS' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'IMPLICIT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'PARAMETER' (TERMINAL), NAME_LITERAL: 'PROCEDURE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: 'ENUM' (TERMINAL), NAME_LITERAL: 'INTERFACE' (TERMINAL), NAME_LITERAL: 'ABSTRACT' (TERMINAL), NAME_LITERAL: 'PUBLIC' (TERMINAL), NAME_LITERAL: 'PRIVATE' (TERMINAL), NAME_LITERAL: 'ALLOCATABLE' (TERMINAL), NAME_LITERAL: 'ASYNCHRONOUS' (TERMINAL), NAME_LITERAL: 'BIND' (TERMINAL), NAME_LITERAL: 'CODIMENSION' (TERMINAL), NAME_LITERAL: 'COMMON' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'DIMENSION' (TERMINAL), NAME_LITERAL: 'EQUIVALENCE' (TERMINAL), NAME_LITERAL: 'EXTERNAL' (TERMINAL), NAME_LITERAL: 'INTENT' (TERMINAL), NAME_LITERAL: 'INTRINSIC' (TERMINAL), NAME_LITERAL: 'NAMELIST' (TERMINAL), NAME_LITERAL: 'OPTIONAL' (TERMINAL), NAME_LITERAL: 'POINTER' (TERMINAL), NAME_LITERAL: 'PROTECTED' (TERMINAL), NAME_LITERAL: 'SAVE' (TERMINAL), NAME_LITERAL: 'TARGET' (TERMINAL), NAME_LITERAL: 'VOLATILE' (TERMINAL), NAME_LITERAL: 'VALUE' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
final-procedure-stmt	{NAME_LITERAL: 'FINAL' (TERMINAL) }
shared-term-do-construct	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL) }
named-constant-def	{NAME_LITERAL: '' (TERMINAL) }
lock-stat-list	{NAME_LITERAL: 'ACQUIRED' (TERMINAL), NAME_LITERAL: 'STAT' (TERMINAL), NAME_LITERAL: 'ERRMSG' (TERMINAL) }
enum-def	{NAME_LITERAL: 'ENUM' (TERMINAL) }
real-part	{INT_LITERAL_CONSTANT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), NAME_LITERAL: '' (TERMINAL) }
execution-part-construct3_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'FORMAT' (TERMINAL), NAME_LITERAL: 'ENTRY' (TERMINAL), NAME_LITERAL: 'DATA' (TERMINAL), NAME_LITERAL: 'ALLOCATE' (TERMINAL), NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'BACKSPACE' (TERMINAL), NAME_LITERAL: 'CALL' (TERMINAL), NAME_LITERAL: 'CLOSE' (TERMINAL), NAME_LITERAL: 'CONTINUE' (TERMINAL), NAME_LITERAL: 'CYCLE' (TERMINAL), NAME_LITERAL: 'DEALLOCATE' (TERMINAL), NAME_LITERAL: 'END' (TERMINAL), NAME_LITERAL: 'ENDFUNCTION' (TERMINAL), NAME_LITERAL: 'ENDPROCEDURE' (TERMINAL), NAME_LITERAL: 'ENDPROGRAM' (TERMINAL), NAME_LITERAL: 'ENDSUBROUTINE' (TERMINAL), NAME_LITERAL: 'ENDFILE' (TERMINAL), NAME_LITERAL: 'ERROR' (TERMINAL), NAME_LITERAL: 'EXIT' (TERMINAL), NAME_LITERAL: 'FLUSH' (TERMINAL), NAME_LITERAL: 'FORALL' (TERMINAL), NAME_LITERAL: 'GO' (TERMINAL), NAME_LITERAL: 'GOTO' (TERMINAL), NAME_LITERAL: 'IF' (TERMINAL), NAME_LITERAL: 'INQUIRE' (TERMINAL), NAME_LITERAL: 'LOCK' (TERMINAL), NAME_LITERAL: 'NULLIFY' (TERMINAL), NAME_LITERAL: 'OPEN' (TERMINAL), NAME_LITERAL: 'PRINT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'RETURN' (TERMINAL), NAME_LITERAL: 'REWIND' (TERMINAL), NAME_LITERAL: 'STOP' (TERMINAL), NAME_LITERAL: 'SYNC' (TERMINAL), NAME_LITERAL: 'UNLOCK' (TERMINAL), NAME_LITERAL: 'WAIT' (TERMINAL), NAME_LITERAL: 'WHERE' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL), NAME_LITERAL: 'ASSOCIATE' (TERMINAL), NAME_LITERAL: 'BLOCK' (TERMINAL), NAME_LITERAL: 'SELECT' (TERMINAL), NAME_LITERAL: 'SELECTCASE' (TERMINAL), NAME_LITERAL: 'CRITICAL' (TERMINAL), NAME_LITERAL: 'SELECTTYPE' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), NAME_LITERAL: 'DO' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
image-selector1_opt_autogen	{_EMTPTY_: '' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL) }
return-stmt	{NAME_LITERAL: 'RETURN' (TERMINAL) }
access-id-list	{NAME_LITERAL: '' (TERMINAL), NAME_LITERAL: 'OPERATOR' (TERMINAL), NAME_LITERAL: 'ASSIGNMENT' (TERMINAL), NAME_LITERAL: 'READ' (TERMINAL), NAME_LITERAL: 'WRITE' (TERMINAL) }
29_optlist_autogen	{_EMTPTY_: '' (TERMINAL), COMMA: ',' (TERMINAL) }
74_group_autogen	{DECIMALPOINT_OR_PERIOD: '.' (TERMINAL) }
image-set	{NAME_LITERAL: '' (TERMINAL), LEFT_PARENTHESIS: '(' (TERMINAL), LEFT_SQUARE_BRACKET: '[' (TERMINAL), ASTERIK: '*' (TERMINAL), NOT: '' (TERMINAL), PLUS: '+' (TERMINAL), MINUS: '-' (TERMINAL), DECIMALPOINT_OR_PERIOD: '.' (TERMINAL), INT_LITERAL_CONSTANT: '' (TERMINAL), REAL_LITERAL_CONSTANT: '' (TERMINAL), LOGICAL_LITERAL_CONSTANT: '' (TERMINAL), CHAR_LITERAL_CONSTANT: '' (TERMINAL), BOZ_LITERAL_CONSTANT: '' (TERMINAL) }
power-op	{ASTERIK: '*' (TERMINAL) }
dimension-spec	{NAME_LITERAL: 'DIMENSION' (TERMINAL) }
20_opt_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL), NAME_LITERAL: '' (TERMINAL) }
type-param-def-stmt1_optlist_autogen	{_EMTPTY_: '' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL) }
pointer-object-list	{NAME_LITERAL: '' (TERMINAL) }
1_group_autogen	{LEFT_PARENTHESIS: '(' (TERMINAL) }
_START_	{NAME_LITERAL: 'SUBROUTINE' (TERMINAL), NAME_LITERAL: 'TYPE' (TERMINAL), NAME_LITERAL: 'CLASS' (TERMINAL), NAME_LITERAL: 'ELEMENTAL' (TERMINAL), NAME_LITERAL: 'IMPURE' (TERMINAL), NAME_LITERAL: 'MODULE' (TERMINAL), NAME_LITERAL: 'PURE' (TERMINAL), NAME_LITERAL: 'RECURSIVE' (TERMINAL), NAME_LITERAL: 'INTEGER' (TERMINAL), NAME_LITERAL: 'REAL' (TERMINAL), NAME_LITERAL: 'DOUBLEPRECISION' (TERMINAL), NAME_LITERAL: 'DOUBLE' (TERMINAL), NAME_LITERAL: 'COMPLEX' (TERMINAL), NAME_LITERAL: 'CHARACTER' (TERMINAL), NAME_LITERAL: 'LOGICAL' (TERMINAL) }
else-stmt	{NAME_LITERAL: 'ELSE' (TERMINAL) }
proc-decl-list	{NAME_LITERAL: '' (TERMINAL) }
